enum MovementEventType
{
    START,
    COMPLETE,
    LOOP_COMPLETE
};

class CCArmatureAnimation : public CCProcessBase
{
public:
    static CCArmatureAnimation *create(CCArmature *armature);
	
public:
    virtual void setSpeedScale(float speedScale);
	
    virtual float getSpeedScale() const;

    virtual void setAnimationInternal(float animationInternal);

    void play(const char *animationName, int durationTo = -1, int durationTween = -1,  int loop = -1, int tweenEasing = TWEEN_EASING_MAX);

    void playByIndex(int animationIndex,  int durationTo = -1, int durationTween = -1,  int loop = -1, int tweenEasing = TWEEN_EASING_MAX);

    virtual void gotoAndPlay(int frameIndex);

    virtual void gotoAndPause(int frameIndex);

    virtual void pause();

    virtual void resume();

    virtual void stop();

    int getMovementCount();

    std::string getCurrentMovementID();

    void setMovementEventCallFunc(CCObject *target, SEL_MovementEventCallFunc callFunc);

    void setFrameEventCallFunc(CCObject *target, SEL_FrameEventCallFunc callFunc);

    virtual CCObject* getUserObject();

    virtual void setUserObject(CCObject *pUserObject);
};
