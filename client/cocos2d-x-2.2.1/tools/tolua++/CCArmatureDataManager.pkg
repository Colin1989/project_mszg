class  CCArmatureDataManager : public CCObject
{
public:
    static CCArmatureDataManager *sharedArmatureDataManager();

    static void purge();

public:
    void addArmatureData(const char *id, CCArmatureData *armatureData, const char *configFilePath = "");

    CCArmatureData *getArmatureData(const char *id);

    void removeArmatureData(const char *id);

    void addAnimationData(const char *id, CCAnimationData *animationData, const char *configFilePath = "");

    CCAnimationData *getAnimationData(const char *id);

    void removeAnimationData(const char *id);

    void addTextureData(const char *id, CCTextureData *textureData, const char *configFilePath = "");

    CCTextureData *getTextureData(const char *id);

    void removeTextureData(const char *id);

    void addArmatureFileInfo(const char *configFilePath);

    void addArmatureFileInfoAsync(const char *configFilePath, CCObject *target, SEL_SCHEDULE selector);

    void addArmatureFileInfo(const char *imagePath, const char *plistPath, const char *configFilePath);

    void addArmatureFileInfoAsync(const char *imagePath, const char *plistPath, const char *configFilePath, CCObject *target, SEL_SCHEDULE selector);

    virtual void removeArmatureFileInfo(const char *configFilePath);

    void addSpriteFrameFromFile(const char *plistPath, const char *imagePath, const char *configFilePath = "");

    bool isAutoLoadSpriteFile();

    CCDictionary *getArmatureDatas() const;
    CCDictionary *getAnimationDatas() const;
    CCDictionary *getTextureDatas() const;
};

