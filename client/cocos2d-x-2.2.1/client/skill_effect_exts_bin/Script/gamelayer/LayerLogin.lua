------------------------------------------------------------------------ 作者：shenl-- 日期：2013-12-24-- 描述：登入模块----------------------------------------------------------------------local loginUILayerRoot = nil			---当前界面root节点local function Handle_req_login(resp)	print("======= id: "..resp.id)	--FIXME   ->保存全局 的玩家ID	print("======= result: "..resp.result)	if(resp.result == login_result["login_norole"]) then		--UIManager.destroy("UI_login")		print("没有角色")		UIManager.push("UI_RollChoice")			elseif resp.result == login_result["login_passworderror"] then		print("密码错误")	elseif resp.result == login_result["login_success"] then 		print("登入成功")		UIManager.destroy("UI_Login")				UIManager.push("UI_Main","init")	elseif resp.result == login_result["login_noregister"] then		--Toast.show("未注册")	end	 endlocal function Handle_req_regsiter(resp)	if resp.result == register_result["register_success"] then		print("resp->注册成功")		Toast.show("注册成功")	elseif resp.result == register_result["register_failed"] then		print("resp->注册失败")		Toast.show("注册失败,改用户已存在")	endendLayerLogin = {}LayerAbstract:extend(LayerLogin)LayerLogin.onClick = function(weight)	local weightName = weight:getName()		local editorBoxName =   loginUILayerRoot:getWidgetByName("name_TextField")		tolua.cast(editorBoxName,"UITextField")		local function handle_onClick(typeName,widget) 		print("--------------",typeName)	end	editorBoxName:registerEventScript(handle_onClick)			local editorBoxPassWord =   loginUILayerRoot:getWidgetByName("password_TextField")		tolua.cast(editorBoxPassWord,"UITextField")	if weightName == "login_Button" then		--注册				local tb = req_register()		tb.account = editorBoxName:getStringValue()		tb.channelid = 0		tb.platformid = 0		tb.password = editorBoxPassWord:getStringValue()		NetSocket_send(tb)--]]		--FightAnimation_drop(ms)	elseif weightName == "regisiter" then		--登入		local tb = req_login()		tb.version = get_proto_version()		tb.account = editorBoxName:getStringValue()		tb.password = editorBoxPassWord:getStringValue()		NetHelper.sendAndWait(tb, NetMsgType["msg_notify_login_result"])		CCUserDefault:sharedUserDefault():setStringForKey("string", tb.account)	endend--UIManager.destroy("UI_login")--LayerMain.Create("UI_main")local function initButtonEvent()	setOnClickListenner("login_Button")	setOnClickListenner("regisiter")endlocal function Keepaccount()		local ret = CCUserDefault:sharedUserDefault():getStringForKey("string")	local str = string.format("%s", ret)    print( string.format("%s", ret) )	local editorBoxName =   loginUILayerRoot:getWidgetByName("name_TextField")		tolua.cast(editorBoxName,"UITextField")	editorBoxName:setText(ret)end-- initLayerLogin.init = function ()	print("客户端版本-----------------------------",get_proto_version())	NetSocket_registerHandler(NetMsgType["msg_notify_login_result"], notify_login_result(), Handle_req_login)	NetSocket_registerHandler(NetMsgType["msg_notify_register_result"], notify_register_result(), Handle_req_regsiter)	loginUILayerRoot = UIManager.findLayerByTag("UI_Login")	initButtonEvent()		Keepaccount()	--LoadResouse(1) --加载资源	local editorBoxName =   loginUILayerRoot:getWidgetByName("name_TextField")		tolua.cast(editorBoxName,"UITextField")		local function handle_onClick(typeName,widget) 		print("--------------",typeName)	end	editorBoxName:registerEventScript(handle_onClick)	end