------------------------------------------------------------------------ 作者：shenl-- 日期：2013-12-3-- 描述：游戏地图层----------------------------------------------------------------------CELLSIZE_WIDTH  = 128CELLSIZE_HEIGHT = 120mGridIdMask 	= 0			--格子	  		tag掩码mSpriteMask 	= 100 		--怪物道具		tag掩码mSpriteUIMask	= 1000		--怪物UI  		tag掩码mSpriteAktFontMask = 900	--怪物攻击字体	tag掩码mSpriteLifeFontMask = 800	--怪物攻击字体	tag掩码mSpriteProgressMask = 700	--怪物攻击字体	tag掩码mModifyMask 	= 200		--修饰层  		tag掩码local m_visibleSize = CCDirector:sharedDirector():getVisibleSize()local mTmxmapbg = nil				--遮罩层父节点local mGirdBatchNodelayer = nil 	--格子层父节点local mModifyBatchNodelayer = nil	--修饰层父节点-- 获取精灵层跟节点function getTmxMapBackground()	return mTmxmapbgend-- 获取格子层function getGridNodeRoot()	return mGirdBatchNodelayerendfunction getModifyNodeRoot()	return mModifyBatchNodelayerend-- 返回值  对应点  地块IDfunction getTouchPointInTileMap(touchpos,node)	--mapLocation = node:getPosition();   -- 地图位置	local backszie = node:boundingBox().size;-- 地图尺寸	local cell_W = backszie.width/5;	local cell_H = backszie.height/6;	local mapOrigin = node:boundingBox().origin;	local line =(math.abs(touchpos.x - mapOrigin.x))/cell_W;	local row = (math.abs(touchpos.y - mapOrigin.y))/cell_H;	local layerid = math.floor(line)+5*(5 - math.floor(row)) +1		--图层 与 ID 对应	return ccp(math.floor(line),5 - math.floor(row)),layeridend-- 初始化 修饰层 (怪物的尸体，毒，XX)function initModifySprite(x,y)	local ModifyBatchNode = CCSpriteBatchNode:create("xx.png",30)	ModifyBatchNode:setPosition(0,0)			for i = 0,5 do		for j = 0,4 do			local ModifyCell = CCSprite:createWithTexture( ModifyBatchNode:getTexture())--,CCRectMake(0,0,100,100))			ModifyCell:setPosition(x+CELLSIZE_WIDTH*j + CELLSIZE_WIDTH/2,				y+CELLSIZE_HEIGHT*i + CELLSIZE_HEIGHT/2);			ModifyCell:setAnchorPoint(ccp(0.5,0.5))			ModifyCell:setTag((5 - i)*5 +j+1 + mModifyMask)			ModifyCell:setVisible(false)			ModifyBatchNode:addChild(ModifyCell)		end	end	return ModifyBatchNodeend-- 由地块ID获取TMX地图上的点function getPosByGridID(GridId)	if(GridId <= 30 and GridId >= 1) then		local x = (GridId-1)%5		local y = (GridId-1)/5		--print("open:",GridId)		return math.floor(x),math.floor(y)	endend-- 获取要置换的每个精灵的实际坐标  by GridIdfunction getRealSpritePosByGridId(layerid) 	local tmxlayer = mTmxmapbg:layerNamed("layer1")	local tileCoord = ccp(getPosByGridID(layerid))	local	sprite = tmxlayer:tileAt(tileCoord);	local x1,y1 = sprite:getPosition()   --- 获取当前格子的坐标	return x1,y1end--创建战斗场景详细信息入口  index 关卡function CreateFightlayerDetails(index)	local GildEvent = ClearFightDate(FightDateCache.getMapDateByLv(index))	Create_GameBackGroundLayer(LayerCopyTips.getCurCopyRes_id())	--创建背景层			--add tmx map	local layer = CCLayer:create()	mTmxmapbg = CCTMXTiledMap:create("gamemask.tmx")				--遮罩层	mTmxmapbg:setPosition(ccp(m_visibleSize.width/2,m_visibleSize.height/2));	mTmxmapbg:setAnchorPoint(ccp(0.5,0.5));	layer:addChild(mTmxmapbg,g_Const_GameLayer.sceneChildLayer.mask);	local MaskposX = mTmxmapbg:boundingBox().origin.x;	local MaskposY = mTmxmapbg:boundingBox().origin.y;			mGirdBatchNodelayer = initRandomGridSprite(GildEvent,MaskposX,MaskposY - 52,LayerCopyTips.getCurCopyRes_id())   --initGridSprite(MaskposX,MaskposY - 52)		--精灵格层			layer:addChild(mGirdBatchNodelayer,g_Const_GameLayer.sceneChildLayer.gridMasked)		mModifyBatchNodelayer = initModifySprite(MaskposX,MaskposY) 	--修饰层	layer:addChild(mModifyBatchNodelayer,g_Const_GameLayer.sceneChildLayer.modified);	OpenMask(FightDateCache.getCurrBeginPos(),true)		--开门	createInitativeMonster()							--主动怪出现	return layerendfunction CreatelayerDetails(GameStatus)	local layer	--CCNotificationCenter:sharedNotificationCenter():registerScriptObserver(g_sceneRoot,testfunc, "eventName")	--CCNotificationCenter:sharedNotificationCenter():postNotification("eventName")		--ModelPlayer.initRender()	if(GameStatus == g_Const_GameStatus.GamePlay) then		cclog("g_CurLevelIndex-------------->",CopyDateCache.GameType)		GameUiLayer.initView(CopyDateCache.GameType)		layer = CreateFightlayerDetails(g_CurLevelIndex)	end	--touch event		local function onTouchBegan(x,y)			 --touchBeginPoint = {x = x, y = y}		if(GameStatus == g_Const_GameStatus.GamePlay) then			HandleFightTouchBegan(x,y)		end		return true	end		local function onTouchMoved(x,y)		 if touchBeginPoint then         -- local cx, cy = batch:getPosition()          --batch:setPosition(cx + x - touchBeginPoint.x, cy + y - touchBeginPoint.y)          touchBeginPoint = {x = x, y = y}		end		if(GameStatus == g_Const_GameStatus.GamePlay) then			HandleFightTouchMoved(x,y)		end	end		local function onTouchEnded(x,y)		--touchBeginPoint = nil		if(GameStatus == g_Const_GameStatus.GamePlay) then			HandleFightTouchEnded(x,y)		end	end		local function onTouch(eventType,x,y)        if eventType == "began" then               return onTouchBegan(x, y)        elseif eventType == "moved" then            return onTouchMoved(x, y)		else            return onTouchEnded(x, y)			end		end		layer:registerScriptTouchHandler(onTouch)	--layer:registerScriptTouchHandler(onTouch,false,1000,true)	layer:setTouchEnabled(true)		return layerendfunction createGameSceneLayer(GameStatus)	g_sceneRoot:removeAllChildrenWithCleanup(true)	g_sceneRoot:addChild(CreatelayerDetails(GameStatus))end--createGameSceneLayer(g_Const_GameStatus.GamePlay)