------------------------------------------------------------------------ 作者：lewis hamilton-- 日期：2014-03-03-- 描述：技能配置信息----------------------------------------------------------------------GameSkillDataCache = {}GameSkillConfig = {}local g_skill_base_info = {--[[	{		skill_id = 1,		skill_name = "fire ball",		icon_file_name = "skillicon_0001.png",		frame_file_name = "skillframe_purple.png",		fly_effect_id = 0,		front_effect_id = 1,		back_effect_id = 0,		buff_id = 1,		damage_type = "magical",		skill_level = 1,		skill_cd = 5,		target = 2,		damage_value = 200,		probability = 100,		description = "This is fire ball!",	}]]--}local g_skill_effect_info ={--[[	{		effect_id = 1,		file_name = "effect_003_01.png",		string_format = "effect_003_%02d.png",		image_count = 11,		effect_frame_idx = 7,		plist_name = "",	},]]--}local g_skill_buff_info ={--[[	{		buff_id = 1,		buff_name = "poison",		buff_type = 2,		buff_icon = "",		shader_name = "debuff_drug.fsh",		effect_id = 0,		duration = 3,		modify_attribute = "atk,life,hit_ratio,miss_ratio,critical_ratio,tenacity,speed",		modify_value = "0,10,5,0,-1,10,100",	}]]--}--获取技能基础数据function GameSkillConfig.getSkillBaseInfo(skillID)	for key, element in ipairs(g_skill_base_info) do		if(element.skill_id == skillID) then			return element		end	end	print("can't find skill with id"..skillID)	return nilend--获取技能动画数据function GameSkillConfig.getSkillEffectInfo(effectID)	for key, element in ipairs(g_skill_effect_info) do		if(effectID == element.effect_id) then			return element		end	end	print("can't find skill effect info with id"..effectID)	returnendfunction GameSkillConfig.getSkillEffectInfoByKey(paramKey)	for key, element in ipairs(g_skill_effect_info) do		if(key == paramKey) then			return element		end	end	returnend--获取技能buff数据function GameSkillConfig.getSkillBuffInfo(buffID)	for key, element in ipairs(g_skill_buff_info) do		if(buffID == element.buff_id) then			return element		end	end	print("can't find buff info with id "..buffID)	return nilend--生成动画function GameSkillConfig.createAnimation(stringFormat, totalFrame, interval)	interval = 1.0 / 16.0	animFrames = CCArray:createWithCapacity(totalFrame)	for i = 1, totalFrame do		str = string.format(stringFormat, i)		frame = CCSpriteFrameCache:sharedSpriteFrameCache():spriteFrameByName(str);		animFrames:addObject(frame);	end	animation = CCAnimation:createWithSpriteFrames(animFrames, interval);	return animation end--加载技能基本信息function GameSkillConfig.loadBaseInfo()	local fileName = "skill_base_info.xml"	local xmlTB = loadXmlFile(fileName)	print("parse skill base info")	for k, v in pairs(xmlTB) do				-- 行		local baseInfoElement = {}		for name, value in pairs(v) do		-- 列			--print("name: "..name.." value "..value)			if "skill_id" == name then				baseInfoElement.skill_id = value + 0			elseif "skill_name" == name then				baseInfoElement.skill_name = value			elseif "fly_effect_id" == name then				baseInfoElement.fly_effect_id = value + 0			elseif "front_effect_id" == name then				baseInfoElement.front_effect_id = value + 0			elseif "back_effect_id" == name then				baseInfoElement.back_effect_id = value + 0			end		end		table.insert(g_skill_base_info, baseInfoElement)	endend--加载技能特效信息function GameSkillConfig.loadEffectInfo()	local fileName = "skill_effect_tplt.xml"	local xmlTB = loadXmlFile(fileName)	print("parse skill effect info")	for k, v in pairs(xmlTB) do				-- 行		local baseEffectElement = {}			for name, value in pairs(v) do		-- 列			--print("name: "..name.." value "..value)			if "effect_id" == name then				baseEffectElement.effect_id = value + 0			elseif "file_name" == name then				baseEffectElement.file_name = value			elseif "string_format" == name then				baseEffectElement.string_format = value			elseif "image_count" == name then				baseEffectElement.image_count = value + 0			elseif "effect_frame_idx" == name then				baseEffectElement.effect_frame_idx = value + 0			elseif "plist_name" == name then				baseEffectElement.plist_name = value			end		end			table.insert(g_skill_effect_info, baseEffectElement)	endend--加载技能buff配置信息function GameSkillConfig.loadBuffInfo()	local fileName = "skill_buff_tplt.xml"	local xmlTB = loadXmlFile(fileName)	print("parse skill buff info")	for k, v in pairs(xmlTB) do				-- 行		local baseBuffElement = {}			for name, value in pairs(v) do		-- 列			--print("name: "..name.." value "..value)			baseBuffElement[name] = value			if "buff_id" == name then				baseBuffElement.buff_id = value + 0			elseif "buff_name" == name then				baseBuffElement.buff_name = value			elseif "buff_type" == name then				baseBuffElement.buff_type = value + 0			elseif "buff_icon" == name then				baseBuffElement.buff_icon = value			elseif "shader_name" == name then				baseBuffElement.shader_name = value			elseif "effect_id" == name then				baseBuffElement.effect_id = value + 0			elseif "duration" == name then				baseBuffElement.duration = value + 0			elseif "modify_attribute" == name then				baseBuffElement.modify_attribute = value			elseif "modify_value" == name then				baseBuffElement.modify_value = value			end		end			if baseBuffElement.shader_name == "0" then			--print("what the hell")			baseBuffElement.shader_name = nil		end		table.insert(g_skill_buff_info, baseBuffElement)	endendGameSkillConfig.loadBaseInfo()GameSkillConfig.loadEffectInfo()GameSkillConfig.loadBuffInfo()	function GameSkillConfig.loadConfig()	end