------------------------------------------------------------------------ 作者：lewis-- 日期：2013-4-4-- 描述：魔法攻击----------------------------------------------------------------------MagicAttack = {}--对战function MagicAttack.fight(caster, target, id, level, timer)--施法者,指向性目标,技能id,技能等级   local base = SkillConfig.getSkillBaseInfo(id)   if talentMgr.BeforeCastSkill(caster,target,level,base) ~= nil then          --技能被天赋被换掉了        cclog("技能 被天赋替换了！！----")        return true   end 	local targetTB = MagicAttack.getTargets(caster, target, id)	if #targetTB == 0 then--无作用目标		return false	end	RoleMgr.useSkill(caster, id)		local attribute = caster.mData.mAttribute	local atk = attribute:getByName("atk")		local groupId = caster:getConfig("role_group_id")--组别id,0是玩家,1是怪物,2友军	local player = RoleMgr.getConfig("rmc_player_object")	local round = BattleMgr.getConfig("bmc_current_round")	local dp, hp = SkillMgr.calDamageValue(id, level, atk)	local health = Damage.new()	health:setData("damage", hp, id)	health:setData("type", "hit")	if groupId == 2 then--友军对玩军回血		health:setData("position", player:getTopPos())		player:bearDamage(health:getData("damage"))	else		--技能回血		health:setData("position", caster:getTopPos())		caster:bearDamage(health:getData("damage"))	end			--施法动作	if timer == nil then		timer = round:getLastTime()	end    --施法前摇    local step = StepBeforeCast.new()    step:init(caster:getMiddlePos())    step:setTimer(timer)    round:add(step)	timer = timer + step:getDuration()	--施法者播放动作	step = StepCaster.new()	step:init(caster, id)	step:setTimer(timer)	round:add(step)	timer = timer + step:getDuration()		--施法完毕	step = StepAfterCast.new()	if groupId == 2 then--友军对玩军回血		step:init(player, health, id, level,target)	else		step:init(caster, health, id, level,target)	end	step:setTimer(timer)	round:add(step)	timer = timer + step:getDuration()		local targetPosTB = {}	for key, value in pairs(targetTB) do		table.insert(targetPosTB, value:getMiddlePos())	end	--技能特效	local step = StepSkillEffect.new()	step:init(caster:getMiddlePos(), targetPosTB, id)	step:setTimer(timer)	round:add(step)	local durationTB = step:getDuration()	--返回的是时间表		local replaceId = 0	--对目标数值计算	for key, value in pairs(targetTB) do        if base.bestrengthenBuff ~= "0" then             if BuffMgr.isChangeSkillId(value,base.bestrengthenBuff) then                 replaceId = base.bestrengthenid                base = SkillConfig.getSkillBaseInfo(base.bestrengthenid)                dp, hp = SkillMgr.calDamageValue(replaceId, level, atk) --重新计算技能伤害            end         end 		local step = StepAfterRoleSkill.new()		step:setTimer(timer + durationTB[key])		round:add(step)		--伤害数值重新计算,算暴击与闪避等效果		local damage,health = MagicAttack.numCalOfAttack(caster, value, dp)        MagicAttack.numCalOSaly(damage,base.special_set,value,base.quality,level,0)        if groupId == 2 then            health:setData("damage", 0)        end		damage:setData("position", value:getTopPos())        health:setData("position", caster:getTopPos())        caster:bearDamage(health:getData("damage"))				--伤害转移		BattleMgr.defenderBearDamage(value, damage, timer)		value:bearDamage(damage:getData("damage"))		--buff计算		local bBuff = false		--几率计算		local bActiveBuff = nil         bActiveBuff = SkillMgr.isOnBuff(base.quality, level, base.target_buff_rate,value)		local config = SkillConfig.getSkillBuffInfo(base.target_buff_id,base.quality,level)		if damage:getData("type") ~= "miss" and config ~= nil and bActiveBuff then 			--local buff = value:getDataInfo("buff")			--buff:active(base.target_buff_id, base.quality, level)			--buff:afterActiveBuff()            BuffMgr.createFactory(base.target_buff_id, base.quality, level,value,caster)			bBuff = true		end		step:init(caster, health, value, damage, id, level, bBuff)				--被击者被K.O后触法技能        RoleMgr.beKOcastSkill(value,caster,timer,durationTB[key] + BattleMgr.getConfig("bmc_baneling_duration"))	end	return trueend--技能斩杀function MagicAttack.numCalOSaly(damage,skillInfospecial_set,defenfer,quality,level,tanlentLv)    local dp = damage:getData("damage")    local dpTemp = dp    local belowRate,addatkrate = SkillConfig.getSalyInfo(skillInfospecial_set,quality,level,tanlentLv)    if belowRate ~= nil then         local attribute = defenfer:getDataInfo("attr")        local leftLifeRate = 100*attribute:getByName("life") / attribute:getMaxAttrWithName("life")         if leftLifeRate < tonumber(belowRate) then             dp = addatkrate/100 * dp             damage:setData("damage",dp)        end     end end --伤害数值计算 damage,正常伤害  damaged ：反弹伤害function MagicAttack.numCalOfAttack(attacker, defender, dp)	local attribute1 = attacker.mData.mAttribute	local attribute2 = defender.mData.mAttribute	--状态	local attackerStatus = attacker.mData.mStatus	local defenderStatus = defender.mData.mStatus		local sideId1 = attacker:getConfig("role_side_id")--组别id,0是玩家,1是怪物	local sideId2 = defender:getConfig("role_side_id")--组别id,0是玩家,1是怪物		local result = attribute1:attack(attribute2)    --result = "miss"	--被击者,隐身中,强制设成miss	if defenderStatus:getStatus("status_stealth") then		if sideId1 ~= sideId2 then--友军没有miss效果			if defender:isCommonAttackValid() then				result = "miss"			end		end	end	if result == "miss" then		if sideId1 ~= sideId2 then--友军没有miss效果			dp = 0        else            result = "hit"		end	elseif result == "crit" then		local rate = BattleMgr.getConfig("bmc_crit_rate")		dp = math.ceil(dp * rate)	end		--魔法伤害减免计算	if result ~= "miss" and sideId1 ~= sideId2 and defender:isCommonAttackValid() then		local rate = defenderStatus:getStatus("status_magic_immune_rate")		dp = dp - (math.ceil(dp * rate))	end    --伤害减少计算      if result ~= "miss" and dp < 0  and sideId1 ~= sideId2 then		local value = defenderStatus:getStatus("status_damage_reduce_value")		dp = dp + value        if dp > -1 then dp = -1 end 	end    if sideId1 ~= sideId2 then		dp = -math.ceil(dp*damageCoe(attacker,defender))	end    if FightDateCache.PVEorPVP() == "PVP" then        local defMitigation = defender:getConfig("mitigation")        dp = dp * (1 - defMitigation)	end	local damage = Damage.new()	damage:setData("damage", dp)	damage:setData("type", result)    -- 魔法反伤    local hp = 0    if  result ~= "miss" and sideId1 ~= sideId2 then         local rate = defenderStatus:getStatus("status_magic_damage_rate")           local extraValue = defenderStatus:getStatus("status_magic_damage_value")                 if (rate > 0 or extraValue > 0)and defender:isCommonAttackValid() then		    hp = -(math.ceil(math.abs(dp) * rate)) - extraValue        end     end     local health = Damage.new()	health:setData("damage", hp)	health:setData("type", "hit") 	return damage,healthend--获得技能目标列表function MagicAttack.getTargets(caster, target, id)	local groupId = caster:getConfig("role_group_id")--组别id,0是玩家,1是怪物	local config = SkillConfig.getSkillBaseInfo(id)		local playerTB 		= RoleMgr.getConfig("rmc_player_table")	local monsterTB 	= RoleMgr.getConfig("rmc_monster_table")	local targetType = config.target	local targetTB = {}		--目标表		local friendTB = playerTB	local enemyTB = monsterTB	local self = caster	local player = RoleMgr.getConfig("rmc_player_object")	if groupId == 1 then		friendTB = monsterTB		enemyTB = playerTB	elseif groupId == 2 then		self = player	end		if targetType == 1 then				--对自己		table.insert(targetTB, self)	elseif targetType == 2 then			--单一敌人		table.insert(targetTB, target)	elseif targetType == 3 then			--全体队友		for key, value in pairs(friendTB) do			if value:isAlive() then				table.insert(targetTB, value)			end		end	elseif targetType == 4 then			--全体敌人		for key, value in pairs(enemyTB) do			if value:isAlive() then				table.insert(targetTB, value)			end		end	end	return targetTBend