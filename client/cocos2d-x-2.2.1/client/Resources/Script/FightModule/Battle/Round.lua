------------------------------------------------------------------------ 作者：lewis-- 日期：2013-4-4-- 描述：回合----------------------------------------------------------------------Round = class()--构造function Round:ctor()	self.mStepTb = {}	--步骤表	self.mIndex		= 0	--步骤计数	self.mTotal		= 0	--步骤总数	self.mName		= "fight"	--回合名字	self.mbValid	= false	endfunction Round:init(name, bValid)	self.mName = name	self.mbValid = bValid	end--添加function Round:add(step)	table.insert(self.mStepTb, step)end--获取最后的时间function Round:getLastTime()	local timer = 0	for key, value in pairs(self.mStepTb) do		local cur = value:getTimer()		if cur > timer then			timer = cur		end	end	return timerend--跳过function Round:skip()	local layer = BattleMgr.getConfig("bmc_round_timer_layer")	layer:stopAllActions()	for key, value in pairs(self.mStepTb) do		if value:getIsExcuted() == false then			self.mIndex = self.mIndex + 1			value:jump()		end	end	if self.mIndex >= self.mTotal then		self:over()	endend--开始执行function Round:run()	self.mTotal = #(self.mStepTb)	local layer = BattleMgr.getConfig("bmc_round_timer_layer")	for key, value in pairs(self.mStepTb) do		local function delayDone()			value:hasExcuted()			value:excute()			self.mIndex = self.mIndex + 1			if self.mIndex >= self.mTotal then				self:over()			end		end		local timer = value:getTimer()		--print(value:getName(), value:getTimer())		layer:runAction(CCSequence:createWithTwoActions(CCDelayTime:create(timer), CCCallFunc:create(delayDone)))	endend--结束function Round:over()	BattleMgr.roundEnd(self)end