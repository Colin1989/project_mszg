------------------------------------------------------------------------ 作者：lewis-- 日期：2013-3-31-- 描述：AI控制视图----------------------------------------------------------------------AIControllView = {}local mRootView = nillocal mBtnAutoPlay = nil--初始化function AIControllView.init()	mRootView = LayerGameUI.mRootView	local icon = tolua.cast(mRootView:getWidgetByName("icon_auto_play"), "UIImageView")	icon:loadTexture("auto_play_x0.png")	icon:registerEventScript(AIControllView.btnAutoPlay)		mBtnAutoPlay = icon	local showAutoPlayBtn = FightDateCache.getData("fd_show_auto_play_btn")	mBtnAutoPlay:setVisible(showAutoPlayBtn)    --mBtnAutoPlay:setEnabled(showAutoPlayBtn)	mBtnAutoPlay:setTouchEnabled(showAutoPlayBtn)		AIControllView.autoPlayTips()	AIControllView.updateBtn()		TipModule.onUI(mRootView, "ui_aicontrollview")endfunction AIControllView.refresh()    --BOSS战屏蔽自动战斗按钮
    --是BOSS战或者活动副本
    if FightDateCache.getData("fd_boss_rule_id") > 0 or FightDateCache.getData("fd_game_mode") == 6 then
		--mBtnAutoPlay:setVisible(false)		--mBtnAutoPlay:setTouchEnabled(false)
        mBtnAutoPlay:setEnabled(false)
    else		local showAutoPlayBtn = FightDateCache.getData("fd_show_auto_play_btn")
		--mBtnAutoPlay:setVisible(showAutoPlayBtn)		--mBtnAutoPlay:setTouchEnabled(showAutoPlayBtn)
        mBtnAutoPlay:setEnabled(showAutoPlayBtn)
    end end--点击自动战斗按钮function AIControllView.btnAutoPlay(clickType, widget)	TipModule.onClick(widget)	if FightMgr.isOnControll() == false then return end	if clickType ~= "releaseUp" then		return	end	if FightDateCache.getData("fd_full_auto_play") then		return	end    if CopyDateCache.getCopyStatus(LIMIT_AUTO_FIGHT.copy_id) ~= "pass" and tonumber(LIMIT_AUTO_FIGHT.copy_id) ~= 1 then		Toast.Textstrokeshow(GameString.get("Public_Pass_Copy",CopyDelockLogic.showNumberFBQById(LIMIT_AUTO_FIGHT.copy_id),LIMIT_AUTO_FIGHT.fbName), ccc3(255, 255, 255), ccc3(0, 0, 0), 30)		return	end	--if FightDateCache.getData("fd_paid_for_auto_play") then		AIControllView.onTrigger()	--else		--AIControllView.open()	--endend--开启function AIControllView.open()	if CopyDateCache.getCopyStatus(LIMIT_AUTO_FIGHT.copy_id) ~= "pass" and tonumber(LIMIT_AUTO_FIGHT.copy_id) ~= 1 then		Toast.Textstrokeshow(GameString.get("Public_Pass_Copy",CopyDelockLogic.showNumberFBQById(LIMIT_AUTO_FIGHT.copy_id),LIMIT_AUTO_FIGHT.fbName), ccc3(255, 255, 255), ccc3(0, 0, 0), 30)		return	end	local level = ModelPlayer.getLevel()	local config = LogicTable.getExpressionRow(22)		local valueTable = 	{		{name = "Lev", value = level}	}	local coins = ExpressionParse.compute(config.expression, valueTable)	local structConfirm = 	{		strText = string.format("是否花费%d金币开启自动战斗", coins),		buttonCount = 2,		buttonName = {GameString.get("sure"),GameString.get("cancle")},		buttonEvent = {AIControllView.request ,nil}, --回调函数		buttonEvent_Param = {nil,nil} --函数参数	}	UIManager.push("UI_ComfirmDialog", structConfirm)end--改变ai状态,开启或关闭function AIControllView.onTrigger()	if AIMgr.getConfig("is_opened") == false then		AIMgr.start()		AIMgr.setConfig("is_opened", true)		mAutoPlayTipsNode:setVisible(true)	else		AIMgr.stop()		AIMgr.setConfig("is_opened", false)		mAutoPlayTipsNode:setVisible(false)	end	AIControllView.updateBtn()end---------------------------------------------------------------------------------------------------------------视图--------------------------------------------------------------------------------------------------------------local function wordsNode(idx)	idx = (idx > 6) and 6 or idx	local node = CCSprite:create("au_play_tips_"..idx..".png")	return nodeend--自动战斗提示function AIControllView.autoPlayTips()	mAutoPlayTipsNode = CCLayer:create()	mRootView:addChild(mAutoPlayTipsNode)		local duration = 0	local width = 0	local total = 8	local d1 = 0.15	local d2 = 0.07	local d3 = d1 + d2	local height = 35	for i = 1, total do		local node = wordsNode(i)		mAutoPlayTipsNode:addChild(node)		local w = node:getContentSize().width		node:setPosition(ccp(width, 0))		local arr = CCArray:create()		arr:addObject(CCDelayTime:create(duration))		arr:addObject(CCMoveBy:create(d1, ccp(0, height)))		arr:addObject(CCMoveBy:create(d2, ccp(0, -height)))		arr:addObject(CCDelayTime:create(total * d3 - duration))		node:runAction(CCRepeatForever:create(CCSequence:create(arr)))				duration = duration + 0.2		width = width + w	end		mAutoPlayTipsNode:setPosition(ccp(400 - width / 2, 480))	mAutoPlayTipsNode:setVisible(false)end--更新按钮function AIControllView.updateBtn()	if CopyDateCache.getCopyStatus(LIMIT_AUTO_FIGHT.copy_id) ~= "pass" and tonumber(LIMIT_AUTO_FIGHT.copy_id) ~= 1 then		mBtnAutoPlay:loadTexture("auto_play_locked.png")		return	end	if AIMgr.getConfig("is_opened") == false then		mBtnAutoPlay:loadTexture("auto_play_x0.png")		mAutoPlayTipsNode:setVisible(false)	else		mBtnAutoPlay:loadTexture("auto_play_x2.png")		mAutoPlayTipsNode:setVisible(true)	endend-----------------------------------------------------------------------------------------------------------网络请求----------------------------------------------------------------------------------------------------------------开始请求function AIControllView.request()	local tb = req_auto_fight()	NetHelper.sendAndWait(tb, NetMsgType["msg_notify_auto_fight_result"])endlocal function handleAutoPlay(tb)	if tb.result == 2 then--开启自动战斗失败				CommonFunc_CreateDialog("金币不足")		return	end	FightDateCache.setData("fd_paid_for_auto_play", true)	AIControllView.onTrigger()endNetSocket_registerHandler(NetMsgType["msg_notify_auto_fight_result"], notify_auto_fight_result, handleAutoPlay)      -- 注册监听