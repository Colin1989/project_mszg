------------------------------------------------------------------------ 作者: lewis hamilton-- 日期: 2014-05-13-- 描述: 游戏战斗资源加载器----------------------------------------------------------------------local kTexture2DPixelFormat_RGBA8888 			= 0local kTexture2DPixelFormat_RGB888 				= 1local kTexture2DPixelFormat_RGB565 				= 2local kTexture2DPixelFormat_A8 					= 3local kTexture2DPixelFormat_RGBA4444 			= 6local kTexture2DPixelFormat_RGB5A1 				= 7FightResLoader = {}local mResTB = {}local function localPrint(...)	if true then return end	lewisPrint("FightResLoader", ...)endfunction FightResLoader.init()	--Log(mResTB)	FightResLoader.cleanup()endfunction FightResLoader.cleanup()	CCTextureCache:sharedTextureCache():removeUnusedTextures()endfunction FightResLoader.cleanupRes()	FightResLoader.release()	FightResLoader.releaseRes()	mResTB = {}end--------------------------------------预加载图片资源+++++++++++++++++++++++++++++++++++++++++++++++++++++++--图片资源文件名是否已存在local function isExsitPlist(filename)	for key, value in pairs(mResTB) do		if value.resType == 1 and value.filename == filename then			value.ref = 1			return true		end	end	return falseend--资源文件名是否已存在local function isExsitPicture(filename)	for key, value in pairs(mResTB) do		if value.resType == 3 and value.filename == filename then			value.ref = 1			return true		end	end	return falseend--声音tag资源名是否存在local function isExsitEffectTag(effectTag)	for key, value in pairs(mResTB) do		if value.resType == 2 and value.effectTag == effectTag then			value.ref = 1			return true		end	end	return falseend--获得纹理像素格式local function getPixelFormat(filename)	for key, value in pairs(mResTB) do		if value.filename == filename then			return value.pixelFormat		end	end	return 0end--增加plist图片资源local function addPlist(filename, pixelFormat)	if isExsitPlist(filename) then		return	end		local data = {}	data.ref = 1				--资源引用,为1时要加载对应的资源	data.filename = filename	--图片资源名	data.resType = 1			--plist	data.isLoaded = false	data.pixelFormat = pixelFormat	localPrint("preload plist by file name", filename)	table.insert(mResTB, data)end--增加声音资源local function addSound(effectTag)	if effectTag == 0 then		return	end	if isExsitEffectTag(effectTag) then		return	end		local data = {}	data.ref = 1				--资源引用,为1时要加载对应的资源	data.effectTag = effectTag	--声音tag资源名	data.resType = 2	data.isLoaded = false	data.pixelFormat = 0	localPrint("preload sound by file name", filename)	table.insert(mResTB, data)end--增加单张图片资源local function addPicture(filename)	if isExsitPlist(filename) then		return	end		local data = {}	data.ref = 1				--资源引用,为1时要加载对应的资源	data.filename = filename	--图片资源名	data.resType = 3			--png	data.isLoaded = false	localPrint("preload png by file name", filename)	table.insert(mResTB, data)end--所有资源计数减1function FightResLoader.release()	for key, value in pairs(mResTB) do		value.ref = value.ref - 1	endend--释放资源function FightResLoader.releaseRes()	local textureCache = CCTextureCache:sharedTextureCache()	local frameCache = CCSpriteFrameCache:sharedSpriteFrameCache()	for key, value in pairs(mResTB) do		if value.ref <= 0 then			if value.resType == 1  then				local path = string.gsub(value.filename,".png",".plist")				--frameCache:removeSpriteFramesFromFile(path)				frameCache:removeSpriteFramesFromFile(path)				--ResourceManger.releasePlist(path)				--textureCache:removeTextureForKey(value.filename)				--localPrint("remove texture", path, value.filename)			elseif value.resType == 2 then				Audio.unloadEffectByTag(value.effectTag)			end		end	end	FightResLoader.removeUnusedResInfo()	--frameCache:removeUnusedSpriteFrames()endfunction FightResLoader.removeUnusedResInfo()	while true do		local bBreak = true		for key, value in pairs(mResTB) do			if value.ref <= 0 then				table.remove(mResTB, key)				bBreak = false				break			end		end		if bBreak then			break		end	endend--plist对应png文件加载完毕回调local function loadPlistDone(filePath, texture2d)	local str = string.gsub(filePath,".png",".plist")	--str = CCFileUtils:sharedFileUtils():fullPathForFilename(str)	CCSpriteFrameCache:sharedSpriteFrameCache():addSpriteFramesWithFile(str)	localPrint("+++++++++++++++load file ", filePath, "done!!!!!!")	FightLoading.updateRef(-1)endlocal function beforPlistTextureInitHandle(filePath)	local defaultPixelFormat = CCTexture2D:defaultAlphaPixelFormat()	local pixelFormat = getPixelFormat(filePath)	CCTexture2D:setDefaultAlphaPixelFormat(pixelFormat)	--print("++++++++++beforPlistTextureInitHandle", defaultPixelFormat, filePath, pixelFormat)end--图片资源加载完毕回调local function loadPictureDone(filePath, texture2d)	FightLoading.updateRef(-1)endlocal function beforPictureTextureInitHandle(filePath)	--print("++++++++++++++++++beforPictureTextureInitHandle", filePath)end	--加载资源function FightResLoader.loadResource()	local cache = CCTextureCache:sharedTextureCache()	local picCount = 0	for key, value in pairs(mResTB) do		if value.ref > 0 then			value.isLoaded = true			if value.resType == 1 then				picCount = picCount + 1				cache:addImageAsyncInScript(value.filename, loadPlistDone, beforPlistTextureInitHandle)			elseif value.resType == 2 then				Audio.preloadEffectByTag(value.effectTag)			elseif value.resType == 3 then				picCount = picCount + 1				cache:addImageAsyncInScript(value.filename, loadPictureDone, beforPictureTextureInitHandle)			end		end	end	FightLoading.updateRef(picCount)end-------------------------计算要加预加载的资源+++++++++++++++++++++++--加载地图资源function FightResLoader.preloadMapEffectRes(sceneID)	local COYTRES = "copyres/"	--资源路径	local resTb = MapView.getSceneConfig(sceneID)	--top Image	addPicture(COYTRES..resTb.top)	-- tmxBg	addPicture(string.gsub(COYTRES..resTb.ground, ".tmx", ".png"))	-- left1	addPicture(COYTRES..resTb.left1)	-- left2	if resTb.left2 ~= "0" then 		addPicture(COYTRES..resTb.left2)	end		addPicture(COYTRES..resTb.right1)	if resTb.right2 ~= "0" then 		addPicture(COYTRES..resTb.right2)	endend--加载技能特效资源function FightResLoader.preloadSkillEffectRes(effectID)	local skillEffectInfo = SkillConfig.getSkillEffectInfo(effectID)	if skillEffectInfo == nil then		return	end	local plistName = skillEffectInfo.plist_name	local filename = string.gsub(plistName, ".plist", ".png")	addPlist(filename, kTexture2DPixelFormat_RGBA4444)	addSound(skillEffectInfo.sound_effect)endlocal function preloadRole(icon)	local animation = ResourceManger.getAnimationFrameById(icon)			local filename = animation.name..".png"	addPlist(filename, kTexture2DPixelFormat_RGBA4444)end--预加载通用的资源function FightResLoader.preloadCommon()	addPlist("monsterArr.png", kTexture2DPixelFormat_RGBA4444)				--怪物属性图	--addPlist("door.png", kTexture2DPixelFormat_RGBA4444)					--打开的门	--addPlist("doorred.png", kTexture2DPixelFormat_RGBA4444)					--未打开的门	addPlist("openmask.png", kTexture2DPixelFormat_RGBA4444)				--打开格子特效	addPlist("monster_death.png", kTexture2DPixelFormat_RGBA4444)			--怪物死亡特效	addPlist("buff.png", kTexture2DPixelFormat_RGBA4444)					--buff图标	--addPlist("eff_open_grid_2.png", kTexture2DPixelFormat_RGBA4444)			--打开格子特效,主动怪出场	addPlist("monstersign.png", kTexture2DPixelFormat_RGBA8888)	--怪物类别图标	addPlist("effect_066d.png", kTexture2DPixelFormat_RGBA4444)	local effect_id = FightConfig.getConfig("fc_fire_ball_trap_effect_id")	FightResLoader.preloadSkillEffectRes(effect_id)		effect_id = FightConfig.getConfig("fc_soul_effect_id")	FightResLoader.preloadSkillEffectRes(effect_id)		effect_id = FightConfig.getConfig("fc_monster_caster_effect_id")	FightResLoader.preloadSkillEffectRes(effect_id)		FightResLoader.preloadSkillEffectRes(4)	FightResLoader.preloadSkillEffectRes(19)	FightResLoader.preloadSkillEffectRes(106)	end--预加载玩家资源function FightResLoader.preloadPlayerRes(role_type)	local skillGroup = ModelSkill.getSkillGroup()	for key, value in pairs(skillGroup.skills) do		FightResLoader.preloadSkillRes(value)	end		local arr = ModelPlayer.getPlayerAttr()	preloadRole(arr.icon)	FightResLoader.preloadSkillEffectRes(arr.fly_effect_id)	FightResLoader.preloadSkillEffectRes(arr.front_effect_id)	FightResLoader.preloadSkillEffectRes(arr.back_effect_id)end--预先加载技能信息function FightResLoader.preloadSkillRes(skillID)	local skillBaseInfo = SkillConfig.getSkillBaseInfo(skillID)	if skillBaseInfo == nil then		return	end	FightResLoader.preloadSkillEffectRes(skillBaseInfo.fly_effect_id)	FightResLoader.preloadSkillEffectRes(skillBaseInfo.front_effect_id)	FightResLoader.preloadSkillEffectRes(skillBaseInfo.back_effect_id)		local roleID = SkillMgr.getHexRoleID(skillID)	if roleID == -1 then		return	end	preloadRole(roleID)end--预先加载怪物技能信息function FightResLoader.preloadMonsterRes(id)	local info =  ModelMonster.getMonsterById(id)					--怪物查询	local animation = ResourceManger.getAnimationFrameById(info.icon)	--动画查询		local filename = animation.name..".png"	addPlist(filename, kTexture2DPixelFormat_RGBA4444)	addSound(animation.sound_enter)	addSound(animation.sound_hurt)	addSound(animation.sound_die)	FightResLoader.preloadSkillEffectRes(info.fly_effect_id)	FightResLoader.preloadSkillEffectRes(info.front_effect_id)	FightResLoader.preloadSkillEffectRes(info.back_effect_id)		--[[	local skillTB, effectTB = SpecialSkill.preload(info.special_skill)	for key, value in pairs(skillTB) do		FightResLoader.preloadSkillRes(value)		localPrint("pre load specialInfo id", value)	end	for key, value in pairs(effectTB) do		FightResLoader.preloadSkillEffectRes(value)	end	]]--		local skillStr = info.skills	local skillIDTable = SkillMgr.parseSkillID(skillStr)	for key, value in pairs(skillIDTable) do		FightResLoader.preloadSkillRes(value + 0)	endend--预加载竞技场敌人资源function FightResLoader.preloadEnemyRes(enemy)	local config =  ModelPlayer.getRoleUpAppence(enemy.type, enemy.advanced_level)	FightResLoader.preloadSkillEffectRes(config.fly_effect_id)	FightResLoader.preloadSkillEffectRes(config.front_effect_id)	FightResLoader.preloadSkillEffectRes(config.back_effect_id)	local animation = ResourceManger.getAnimationFrameById(config.icon)			local filename = animation.name..".png"	addPlist(filename, kTexture2DPixelFormat_RGBA4444)	addSound(animation.sound_enter)	addSound(animation.sound_hurt)	addSound(animation.sound_die)	for key, value in pairs(enemy.battle_prop.sculpture) do		localPrint("value.temp_id", value.temp_id)		FightResLoader.preloadSkillRes(value.temp_id)	endend--预先加载援军技能信息function FightResLoader.perLoadFriendRes(role_type, skillID)	local info =  ModelPlayer.getRoleUpAppence(role_type, 1)	--FightResLoader.preloadSkillEffectRes(info.fly_effect_id)	--FightResLoader.preloadSkillEffectRes(info.front_effect_id)	--FightResLoader.preloadSkillEffectRes(info.back_effect_id)	local animation = ResourceManger.getAnimationFrameById(info.icon)			local filename = animation.name..".png"	addPlist(filename, kTexture2DPixelFormat_RGBA4444)	addSound(animation.sound_enter)	addSound(animation.sound_hurt)	addSound(animation.sound_die)	FightResLoader.preloadSkillRes(skillID)end