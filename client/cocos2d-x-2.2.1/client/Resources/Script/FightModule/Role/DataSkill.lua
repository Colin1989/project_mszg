------------------------------------------------------------------------ 作者：lewis-- 日期：2013-3-31-- 描述：角色技能数据----------------------------------------------------------------------DataSkill = class()local function alloc()	local unit = {}	unit.isValid		= false	unit.name			= "none"	unit.id 			= 0			--技能基础表id	unit.level 			= 0	unit.count 			= 0	unit.progress 		= 0.0	unit.maxCD 			= 0	unit.effect_mode 	= 0	unit.needCD			= 10	unit.target			= 0	unit.bAfterSkill 	= false		--刚使用完技能之后	unit.bSelected		= false    unit.skills_typelist= 0         --重置技能CD    unit.skill_classification = 0	return unitend--构造function DataSkill:ctor()	self.mSkillTB = {}			--技能表	self.mAttribute = nil		--对应属性数据	self.mBuff		= nilend--初始化function DataSkill:init(attribute, buff)	self.mAttribute = attribute	self.mBuff		= buffend--增加技能function DataSkill:addSkill(id, level, role)	local unit = alloc()	table.insert(self.mSkillTB, unit)	local baseInfo = SkillConfig.getSkillBaseInfo(id)	if nil == baseInfo then		return	end	unit.isValid = true	unit.name			= baseInfo.name	unit.id 			= id		--技能基础表id	unit.level 			= level	unit.count 			= -50   --FIXME	unit.progress 		= 0.0	unit.maxCD 			= baseInfo.skill_cd	unit.effect_mode 	= baseInfo.effect_mode	unit.needCD			= 10	unit.target			= baseInfo.target	unit.bAfterSkill 	= false		--刚使用完技能之后    unit.skills_typelist= baseInfo.skills_typelist    unit.skill_classification =  baseInfo.skill_classification		if unit.maxCD < 0 then		lewisPrint("use the skill when i appear")	end	--添加光环表	if baseInfo.skill_cd == 0 then		--self.mBuff:activeHalo(baseInfo.target_buff_id, baseInfo.frame_file_name, level)               if baseInfo.target_buff_id == 0 then             --坑货GJ设定  光环 作用范围用  target判断就够            baseInfo.target_buff_id = baseInfo.caster_buff_id        end         print("创建光环--",baseInfo.target_buff_id, baseInfo.quality,level)        BuffMgr.createFactory(baseInfo.target_buff_id, baseInfo.quality, level,role,role)	endend--选中技能function DataSkill:selectSkill(id, bOn)	for key, value in pairs(self.mSkillTB) do		if value.id == id then			if value.target == 2 then				value.bSelected = bOn				return "success"			else				return "auto"			end		end	end	return "invalid"end--获得选中的技能function DataSkill:getSelected()	for key, value in pairs(self.mSkillTB) do		if value.bSelected then			return value.id, value.level		end	end	return 0, 0end--技能等级function DataSkill:getLevel(id)	for key, value in pairs(self.mSkillTB) do		if value.id == id then			return value.level		end	end	return 0end--获得技能表function DataSkill:getTB()	return self.mSkillTBend--主动技能个数function DataSkill:getCount(data)	local total = 0	for key, value in pairs(self.mSkillTB) do		if value.maxCD > 0 then			total = total + 1		end	end	return totalend--更新function DataSkill:onStep(param)	local speed = self.mAttribute:getByName("speed")	for key, value in pairs(self.mSkillTB) do		if value.maxCD > 0 then--只作用主动技能			if param == "max_cd" then				value.count = 0			elseif param == "normal" then				value.count = value.count + speed			elseif param == "done" then				value.count = value.maxCD			elseif param == "monster_init" then				value.count = -self.mAttribute:getByName("speed")			end			value.progress = value.count / value.maxCD			if value.progress < 0 then				value.progress = 0			end			value.needCD = math.ceil((value.maxCD - value.count) / speed)		end	endend--反制 指定数量的技能  function DataSkill:counterAmount(amount)    local speed = self.mAttribute:getByName("speed")	for key, value in pairs(self.mSkillTB) do		if value.maxCD > 0 then--只作用主动技能            value.count = 0            value.progress = value.count / value.maxCD			if value.progress < 0 then				value.progress = 0			end			value.needCD = math.ceil((value.maxCD - value.count) / speed)            if key >= amount then                 break            end         end    end end function DataSkill:reset(_typelist)	local speed = self.mAttribute:getByName("speed")	for key, value in pairs(self.mSkillTB) do		if value.skills_typelist == tonumber(_typelist) then			value.count = value.maxCD			value.progress = value.count / value.maxCD            if value.progress < 0 then				value.progress = 0			end			value.needCD = math.ceil((value.maxCD - value.count) / speed)		end	endend --使用技能function DataSkill:onUse(id)	--搜索对应id	local speed = self.mAttribute:getByName("speed")	for key, value in pairs(self.mSkillTB) do		if value.id == id then			value.count = 0			value.progress = 0.0			value.bAfterSkill = true			value.needCD = math.ceil((value.maxCD - value.count) / speed)			break		end	endend--取消选中所有技能function DataSkill:unselectAllSkill()	for key, value in pairs(self.mSkillTB) do		value.bSelected = false	endend