------------------------------------------------------------------------ 作者：lewis-- 日期：2013-03-31-- 描述：角色玩家----------------------------------------------------------------------RolePlayer = class(Role) function RolePlayer:ctor()	self.mEffectKnockOut	= nilend--初始化function RolePlayer:init(pos)    self.tag = "RolePlayer"	self.mPosition = pos	self:initConfig()	self:initData()	self:initView(pos)	self.mInfoView:updateAll()end--初始化数据function RolePlayer:initData()    local lv = ModelPlayer.getLevel()    self:setConfig("role_level",lv)    if FightDateCache.getData("fd_copy_id") ~= FIRSTCOPYID then       self:setConfig("role_talent",ModelPlayer.getPlayerTalent())    end     self:setConfig("serve_role_id",ModelPlayer.getId())	local medalId = ModelEquip.getCurrEquip(5)	if medalId == nil then		self:setConfig("mitigation", 0)	else		local data = ModelEquip.getEquipRow(ModelEquip.getEquipInfo(medalId).temp_id)		self:setConfig("mitigation", data.mitigation)	end    talentMgr.addFightstatus(self)	local roleConfig = ModelPlayer.getPlayerAttr()	self:setConfig("role_type", ModelPlayer.getRoleType())	--基础数据	local attribute = self.mData.mAttribute	attribute:initOriginalAttr(roleConfig)	attribute:initCurrentAttr()	attribute:restoreAttribute()	    RoleMgr.addPlayerLifeInfo()     if FightDateCache.getData("fd_game_mode") == 5 then --天梯赛        attribute:initCurrentLife(LayerGameMatch.getCurLife())    end 	--弹道	self.mBallistic.flyId 		= roleConfig.fly_effect_id	self.mBallistic.frontId 	= roleConfig.front_effect_id	self.mBallistic.backId 		= roleConfig.back_effect_id		--技能	local playerSkills = self.mData.mSkill	local skillGroup = ModelSkill.getSkillGroup()    if FightDateCache.getData("fd_copy_id") == FIRSTCOPYID then        for key, id in pairs(skillGroup.skills) do            playerSkills:addSkill(id, skillGroup.level[key], 0)        end     else     	for key, value in pairs(skillGroup.skills) do		    local skill = ModelSkill.getSkill(value)		    if nil == skill then			    playerSkills:addSkill(0, 0, 0)		    else			    playerSkills:addSkill(skill.temp_id, skill.value, 0)		    end	    end	end	local cdparam = FightConfig.getConfig("rmc_player_init_skill_status")	playerSkills:onStep(cdparam)end--初始化视图function RolePlayer:initView(pos)	local layer = RoleMgr.getConfig("rmc_player_parent_layer")	local roleConfig = ModelPlayer.getPlayerAttr()	self.mRoleView = ActionSprite.new(1)	self.mRoleView:init(layer, pos, roleConfig.icon, 1)		self.mInfoView = PlayerInfoView.new()	self.mInfoView:init(self)	self:initSkillBtn()endfunction RolePlayer:setRoleVisible(visible)    self.mRoleView:setRoleVisible(visible)end --初始技能按钮function RolePlayer:initSkillBtn()	-- 主要是针对新手教程,锁定技能	local lockTb = {}	if false == GuideMgr.checkProgress(GuideForce_UseAddBloodSkill) then		if "pass" ~= CopyDateCache.getCopyStatus(GuideForce_UseAddBloodSkill.copy_id)         and FightDateCache.getData("fd_copy_id") ~= FIRSTCOPYID  then			table.insert(lockTb, 2)			table.insert(lockTb, 3)			table.insert(lockTb, 4)		end	elseif false == GuideMgr.checkProgress(GuideForce_UseGroupAttackSkill) then		if "pass" ~= CopyDateCache.getCopyStatus(GuideForce_UseGroupAttackSkill.copy_id)         and FightDateCache.getData("fd_copy_id") ~= FIRSTCOPYID then			table.insert(lockTb, 4)		end	end	self.mInfoView:lockSkill(lockTb)end--被K.Ofunction RolePlayer:knockout()	self:setConfig("is_knockout", true)	if self.mEffectKnockOut == nil then		self.mEffectKnockOut = EffectPlayerKnockout.new()		self.mEffectKnockOut:init(self:getMiddlePos())		self.mEffectKnockOut:knockout()	else		self.mEffectKnockOut:knockout()	end	--清除buff	--local buff = self:getDataInfo("buff")	--buff:cleanupAll()    BuffMgr.clearBuff(self,"allbuff")	local effect = EffectBattleEnd.new()	effect:init("player_knock_out")	effect:play()	--FightMgr.playerKnockout()    local killFriendNumber = RoleMgr.getConfig("kill_friend_number")    RoleMgr.setConfig("kill_friend_number",killFriendNumber+1)    local friendBeKilllist = RoleMgr.getConfig("friend_beKilllist")     table.insert(friendBeKilllist,self:getConfig("serve_role_id"))    RoleMgr.removeRole(self)end--角色重生function RolePlayer:respawn()	self:setConfig("is_knockout", false)    self:setConfig("fast_respawn", 1)	local attribute = self.mData.mAttribute	attribute:respawn()	--技能重新冷却完毕	local skill = self.mData.mSkill	skill:onStep("done")	self.mInfoView:updateAll()	self:changeShader()	if self.mEffectKnockOut ~= nil then		self.mEffectKnockOut:respawn()	end	FightDateCache.setData("fd_player_knockout", false)    table.insert(RoleMgr.getConfig("rmc_player_table"),self)end--受到伤害,修改真实生命值function RolePlayer:bearDamage(damage)	--print("bear damage", damage)	self.mData.mAttribute:modifiedHitPoints(damage)	FightDateCache.setData("fd_player_knockout", not (self:isAlive()))endfunction RolePlayer:compareByGridId(role)    return falseend 