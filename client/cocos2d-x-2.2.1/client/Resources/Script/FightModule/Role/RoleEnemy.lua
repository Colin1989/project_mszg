------------------------------------------------------------------------ 作者：lewis-- 日期：2013-03-31-- 描述：角色玩家----------------------------------------------------------------------RoleEnemy = class(RoleMonster) function RoleEnemy:ctor()    self.mEnemyInfoView = nilend--初始化function RoleEnemy:init(gridId, pos, enemyInfo)    self.tag = "RoleEnemy"	self.mPosition = pos	self:initConfig()	self:setConfig("grid_id", gridId)	self.mGridId	= gridId	self:initData(enemyInfo)	self:initView(pos, enemyInfo)		--怪物ai	--self.mRoleAction = RoleAction.new()	--self.mRoleAction:init(self,"RoleEnemy")    self.mRoleAction = RoleAIAction.new()    self.mRoleAction:init(self,"RoleEnemy")	self.mInfoView:updateAll()		self:setConfig("is_boss", true)end--初始化天赋数据function RoleEnemy:initEnemyTalent(enemyInfo)    local atTb = {}    --Log(enemyInfo.talent_list)    for key,talentInfo in pairs(enemyInfo.talent_list) do       -- if talentInfo.level        local talentInfoLv = LogicTable.getTalentTableRow(talentInfo.talent_id)       local talent_lv = talentInfoLv.level_up_id*100 + talentInfo.level --自定义天赋等级计算       local talent =  Datetalent.new()       talent:init(talent_lv)       table.insert(atTb, talent)    end     self:setConfig("role_talent",atTb)endfunction RoleEnemy:initData(enemyInfo)    --tb.team_tag = 0    --tb.id_leader = 0    --tb.cur_life = 0    self:setConfig("role_group_id", enemyInfo.team_tag)	self:setConfig("role_side_id", enemyInfo.team_tag)    self:setConfig("is_leader", enemyInfo.id_leader)    self:setConfig("serve_role_id",enemyInfo.role_id)    self:setConfig("mitigation",enemyInfo.mitigation)    self:initEnemyTalent(enemyInfo)    --print("敌人等级:",enemyInfo.level)    self:setConfig("role_level",enemyInfo.level)	local roleConfig = ModelPlayer.getRoleUpAppence(enemyInfo.type, enemyInfo.advanced_level)		--弹道	self.mBallistic.flyId 		= roleConfig.fly_effect_id	self.mBallistic.frontId 	= roleConfig.front_effect_id	self.mBallistic.backId 		= roleConfig.back_effect_id		local monsterConfig = ModelMonster.initEnemyAttr(enemyInfo.battle_prop)	self:setConfig("role_config", monsterConfig)	local attribute = self.mData.mAttribute    monsterConfig = talentMgr.addRoleAttr(monsterConfig,self:getConfig("role_talent"))  --增加天赋硬属性	attribute:initOriginalAttr(monsterConfig)	attribute:initCurrentAttr()	attribute:restoreAttribute()    talentMgr.addFightstatus(self)  --增加天赋硬属性		--技能	local skill = self.mData.mSkill	local tb = SkillMgr.parseSkillID(monsterConfig.skills)	for key, value in pairs(monsterConfig.sculpture) do		skill:addSkill(value.temp_id, value.level, -50)	end	skill:onStep("monster_init")		self:setConfig("role_nick_name", enemyInfo.name)	self:setConfig("role_level", enemyInfo.level)    if FightDateCache.getData("fd_game_mode") == 5 then               attribute:initCurrentLife(enemyInfo.cur_life)        if enemyInfo.id_leader == 1 then 	        self:setConfig("attack_type", 0)        else             self:setConfig("attack_type", 1)        end     endend--初始化视图function RoleEnemy:initView(pos, enemyInfo)	local roleConfig = ModelPlayer.getRoleUpAppence(enemyInfo.type, enemyInfo.advanced_level)	local layer = RoleMgr.getConfig("rmc_monster_parent_layer")	self.mRoleView = ActionSprite.new(1)	self.mRoleView:init(layer, pos, roleConfig.icon, self.mGridId)	self:setConfig("role_icon_id", roleConfig.icon)    if enemyInfo.team_tag == 1 then --对手	    self.mRoleView:onDirection(-1)        local enemyIndex = RoleMgr.getConfig("enemy_index")        self.mEnemyInfoView = EnemyInfoView.new()        self.mEnemyInfoView:init(self,enemyIndex,enemyInfo)        RoleMgr.setConfig("enemy_index",enemyIndex + 1)    else         self.mRoleView:onDirection(1)    end 	self.mInfoView = MonsterInfoView.new()	self.mInfoView:init(self)end--受到伤害,修改真实生命值function RoleEnemy:bearDamage(damage)	--print("bear damage", damage)	self.mData.mAttribute:modifiedHitPoints(damage)    local mode = FightDateCache.getData("fd_game_mode")    if mode == 3 or mode == 4 then	    FightDateCache.setData("fd_enemy_knockout", not (self:isAlive()))    end end