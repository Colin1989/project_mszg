------------------------------------------------------------------------ 作者：lewis-- 日期：2013-3-31-- 描述：玩家技能按钮----------------------------------------------------------------------PlayerSkillBtn = class()local mBtnSize = CCSizeMake(94, 94)local function addSkillBtn(btn)	local tb = RoleMgr.getConfig("rmc_player_skill_btn_tb")	table.insert(tb, btn)end--互斥local function selectBtn(btn)	local tb = RoleMgr.getConfig("rmc_player_skill_btn_tb")	for key, value in pairs(tb) do		if value == btn then			value:onEvent()		else			value:unSelect()		end	endendfunction PlayerSkillBtn:ctor(bPlayer)    if bPlayer == nil then        self.mbPlayer   = true    else        self.mbPlayer   = bPlayer    end	self.mRootView 	= nil	self.mBtnParent = nil	self.mBtnSkill	= nil	self.mPosition 	= nil	self.mSkillId  	= 0	self.mLevel		= 0	self.mIdx		= 0					--索引id	self.mSelectedParticle = nil		--选中后的粒子特效	self.mSpriteIcon	= nil	self.mLabelCoolDown = nil	self.mMaskProgress	= nil		self.mSkillConfig	= nil	self.mbOnCD			= true	self.mbSelected		= false			--是否是在选中状态		self.mDelegate		= nil			--回调		self.mbTouchEnable	= true    self.mHasCDCount    = 0end--初始化+创建function PlayerSkillBtn:init(btnParent, pos, skillId, level, idx)	self.mBtnParent = btnParent	local layer = CCLayer:create()    layer:setAnchorPoint(ccp(0,0))	btnParent:addRenderer(layer, 100)	self.mRootView 	= layer	self.mPosition 	= pos	self.mIdx 		= idx	if 0 == skillId then		return	end	self.mSkillId 	= skillId	self.mLevel		= level		self.mSkillConfig = SkillConfig.getSkillBaseInfo(skillId)	self:createBtn()	self:createIcon()	self:createFrame()	self:selectedParticle()		self.mSelectedParticle:setVisible(false)		--加入到互斥表    if self.mbPlayer then	    addSkillBtn(self)    endend--设置回调function PlayerSkillBtn:setDelegate(delegate)	if 0 == self.mSkillId then		return	end	self.mDelegate = delegateend--更新function PlayerSkillBtn:update(percentage, needCD)	if 0 == self.mSkillId then		return	end	if percentage < 1.0 then		self.mMaskProgress:setVisible(true)		if percentage == 0.0 then			self.mMaskProgress:setPercentage(99.99)		else			local to = CCProgressTo:create(0.2, (1.0 - percentage) * 100)			self.mMaskProgress:runAction(to)		end		self.mbOnCD = true		self.mLabelCoolDown:setVisible(true)		self.mLabelCoolDown:setString(string.format("%d", needCD))        self.mHasCDCount = 0	else		Lewis:shaderSpriteResetTime(self.mSpriteIcon)		self.mMaskProgress:setVisible(false)		self.mLabelCoolDown:setVisible(false)		self.mbOnCD = false		if self.mHasCDCount == 0 then			self:playAfterCDEffect()		end		self.mHasCDCount = self.mHasCDCount + 1	endendfunction PlayerSkillBtn:playAfterCDEffect()	if 0 == self.mSkillId or false == self.mbTouchEnable then		return	end	local function removeSelf(sender)		sender:removeFromParentAndCleanup(true)	end	local config = SkillConfig.getSkillEffectInfo(106)	CCSpriteFrameCache:sharedSpriteFrameCache():addSpriteFramesWithFile(config.plist_name)	local sprite = CCSprite:createWithSpriteFrameName(config.file_name)	self.mRootView:addChild(sprite, 100)	sprite:setPosition(self.mPosition)	local animation = FightAnimationMgr.skillEffect(config.string_format, config.image_count)	local arr = CCArray:create()	arr:addObject(CCAnimate:create(animation))	arr:addObject(CCCallFuncN:create(removeSelf))	sprite:runAction(CCSequence:create(arr))end--点击事件function PlayerSkillBtn:onEvent()    if self.mbPlayer == false then return end	if 0 == self.mSkillId then		return	end	if self.mbOnCD then		return	end	if self.mbSelected then		self:unSelect()		RoleMgr.aimedMonster(false)		return	end	local ret = false	if self.mDelegate then		ret = self.mDelegate:selectSkill(self.mSkillId, true)	end		--不是自动释放技能,设置为选中状态	if ret == false then		RoleMgr.aimedMonster(true)		self.mbSelected = true		self.mSelectedParticle:setVisible(true)	endend--取消选中function PlayerSkillBtn:unSelect()	if 0 == self.mSkillId then		return	end	self.mbSelected = false	self.mSelectedParticle:setVisible(false)	if self.mDelegate then		self.mDelegate:selectSkill(self.mSkillId, false)	endend--创建按钮function PlayerSkillBtn:createBtn()	if 0 == self.mSkillId then		return	end	local bLongPress = false	local function skillBtnEvent(clickType, widget)		if self.mbTouchEnable == false then			return		end		--长按回调		local function btnLongPress(sender)			if bLongPress then return end			bLongPress = true			if FightConfig.getConfig("enable_long_press") == false then return end			local bundle = {}			bundle.skill_id 	= self.mSkillId			bundle.level 	= self.mLevel			UIManager.push("UI_SkillInfo", bundle)		end				if clickType == "pushDown" then			bLongPress = false			widget:stopAllActions()			local arr = CCArray:create()			arr:addObject(CCDelayTime:create(0.25))			arr:addObject(CCCallFuncN:create(btnLongPress))			widget:runAction(CCSequence:create(arr))		elseif clickType == "releaseUp" then			if bLongPress == false then				bLongPress = true				if FightMgr.isPlayerOnControll() == false then return end				if RoleMgr.isTouchEnable() == false then					return				end				selectBtn(self)			else				UIManager.pop("UI_SkillInfo")			end		end	end		local pos = ccp(self.mPosition.x, self.mPosition.y)	local layout = UILayout:create()	layout:setSize(mBtnSize)	layout:setTag(self.mIdx)	layout:setTouchEnabled(true)	layout:setPosition(ccp(pos.x - mBtnSize.width / 2, pos.y - mBtnSize.height / 2))	layout:registerEventScript(skillBtnEvent)	self.mBtnParent:addChild(layout)	self.mBtnSkill = layoutend--function PlayerSkillBtn:setScale(scale)    self.mBtnSkill:setScale(scale)    self.mRootView:setScale(scale)end--技能选中后的特效function PlayerSkillBtn:selectedParticle()	if 0 == self.mSkillId then		return	end	local pos = ccp(self.mPosition.x, self.mPosition.y)	local size = CCSizeMake(91, 91)	local layer = CCLayer:create()		local particle1 = CCParticleSystemQuad:create("skill_selected.plist")	layer:addChild(particle1, 100)	particle1:setPosition(ccp(pos.x - size.width / 2, pos.y + size.height / 2))		local arr = CCArray:create()	arr:addObject(CCMoveBy:create(0.5, ccp(size.width, 0)))	arr:addObject(CCMoveBy:create(0.5, ccp(0, -size.height)))	arr:addObject(CCMoveBy:create(0.5, ccp(-size.width, 0)))	arr:addObject(CCMoveBy:create(0.5, ccp(0, size.height)))	particle1:runAction(CCRepeatForever:create(CCSequence:create(arr)))		local particle2 = CCParticleSystemQuad:create("skill_selected.plist")	layer:addChild(particle2, 100)	particle2:setPosition(ccp(pos.x + size.width / 2, pos.y - size.height / 2))		local arr = CCArray:create()	arr:addObject(CCMoveBy:create(0.5, ccp(-size.width, 0)))	arr:addObject(CCMoveBy:create(0.5, ccp(0, size.height)))	arr:addObject(CCMoveBy:create(0.5, ccp(size.width, 0)))	arr:addObject(CCMoveBy:create(0.5, ccp(0, -size.height)))	particle2:runAction(CCRepeatForever:create(CCSequence:create(arr)))		self.mRootView:addChild(layer, 100)	self.mSelectedParticle = layerend--技能图标与进度条function PlayerSkillBtn:createIcon(idx, fileName, special_detail, pos)	if 0 == self.mSkillId then		return	end	local filename = self.mSkillConfig.icon	local pos = ccp(self.mPosition.x, self.mPosition.y)		local iconSprite = Lewis:createShaderSprite(filename, "button_tips.fsh", false)--CCSprite:createWithSpriteFrameName(iconFileName)	self.mRootView:addChild(iconSprite, 1)	iconSprite:setPosition(pos)	self.mSpriteIcon = iconSprite		--kCCProgressTimerTypeBar	local sprite = CCSprite:create(filename)	local maskProgress = CCProgressTimer:create(sprite)	self.mRootView:addChild(maskProgress, 2)		maskProgress:setColor(ccc3(0, 0, 0))	maskProgress:setOpacity(192)	maskProgress:setType(kCCProgressTimerTypeRadial)	maskProgress:setPosition(pos)	maskProgress:setPercentage(100)	maskProgress:setReverseProgress(true)	--maskProgress:setFlipX(true)	self.mMaskProgress = maskProgress		local label = CCLabelAtlas:create("10", "num_black.png", 24, 32, 48)	self.mRootView:addChild(label, 3)	label:setAnchorPoint(ccp(0.5, 0.5))	label:setPosition(pos)	label:setScale(1.0)	self.mLabelCoolDown = label		local detailIdx = self.mSkillConfig.special_detail	if detailIdx == 0 then		return	end		local detailSprite = CCSprite:create(string.format("skill_special_detail%d.png", detailIdx))	self.mRootView:addChild(detailSprite, 5)	detailSprite:setPosition(ccp(pos.x + 28, pos.y - 28))endlocal g_frame_file_table = {	"frame_white.png", 	"runekuan_2.png", 	"runekuan_3.png", 	"runekuan_4.png", 	"runekuan_5.png",	"runekuan_6.png",}--技能按钮边框function PlayerSkillBtn:createFrame()	if 0 == self.mSkillId then		return	end	local pos = ccp(self.mPosition.x, self.mPosition.y)	local fileName = g_frame_file_table[self.mSkillConfig.quality]	local frameSprite = CCSprite:create(fileName)	self.mRootView:addChild(frameSprite, 4)	frameSprite:setPosition(pos)		local label = CCLabelAtlas:create(string.format("%d", self.mLevel), "num_black.png", 24, 32, 48)	self.mRootView:addChild(label, 4)	label:setAnchorPoint(ccp(0.5, 0.5))	label:setPosition(ccp(pos.x - 33, pos.y + 34))	label:setScale(0.5)end--技能加锁function PlayerSkillBtn:lock()	local uiLayer = self.mRootView:getChildByTag(5000)	if uiLayer then		return	end	self.mbTouchEnable = false	uiLayer = UILayer:create()	uiLayer:setPosition(ccp(self.mPosition.x, self.mPosition.y))	self.mRootView:addChild(uiLayer, 10, 5000)	Action_createLock94x94(uiLayer, false, ccp(0, 0))	GuideEvent.skillLock()end--技能解锁function PlayerSkillBtn:unlock()	local uiLayer = tolua.cast(self.mRootView:getChildByTag(5000), "UILayer")	if nil == uiLayer then		return	end	Action_unlock106x106(uiLayer, false, function()		uiLayer:removeFromParentAndCleanup(true)		uiLayer = nil		self.mbTouchEnable = true		GuideEvent.skillUnlock()	end)end