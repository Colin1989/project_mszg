------------------------------------------------------------------------ 作者：lewis-- 日期：2013-03-31-- 描述：角色玩家----------------------------------------------------------------------RoleMonster = class(Role) function RoleMonster:ctor()	self.mMonsterId 	= 0			--怪物id	self.mGridId 		= 0			--据在格子id	self.mRoleAction	= nilendfunction RoleMonster:init(gridId, pos, monsterid)    self.tag = "RoleMonster"	self.mPosition = pos	self:initConfig()    self:setConfig("role_group_id", 1)	self:setConfig("role_side_id", 1)	self:setConfig("grid_id", gridId)	self.mMonsterId = monsterid	self.mGridId	= gridId	self:initData()	self:initView(pos)	    --怪物新AI     self.mRoleAction = RoleAIAction.new()    self.mRoleAction:init(self,"RoleMonster")		self.mInfoView:updateAll()endfunction RoleMonster:initData()	local monsterConfig = ModelMonster.getMonsterById(self.mMonsterId)	self:setConfig("role_config", monsterConfig)	local attribute = self.mData.mAttribute	attribute:initOriginalAttr(monsterConfig)	attribute:initCurrentAttr()	attribute:restoreAttribute()		--弹道	self.mBallistic.flyId 		= monsterConfig.fly_effect_id	self.mBallistic.frontId 	= monsterConfig.front_effect_id	self.mBallistic.backId 		= monsterConfig.back_effect_id	    self:setConfig("role_nick_name", monsterConfig.name)	self:setConfig("role_level", monsterConfig.level)	self:setConfig("attack_type", monsterConfig.attack_type)	self:setConfig("monster_type", monsterConfig.type)  	--技能	local skill = self.mData.mSkill	local tb = SkillMgr.parseSkillID(monsterConfig.skills)	for key, value in pairs(tb) do		skill:addSkill(value + 0, 1, self)	end	skill:onStep("monster_init")	self:setConfig("skill_cnt", #tb)		SpecialSkill.logic(self, monsterConfig.special_skill)	--boss	if monsterConfig.type == 2 or monsterConfig.type == 3 then		self:setConfig("is_boss", true)--金银怪	endendfunction RoleMonster:initView(pos)	local layer = RoleMgr.getConfig("rmc_monster_parent_layer")	local monsterConfig = ModelMonster.getMonsterById(self.mMonsterId)	self.mRoleView = ActionSprite.new(-1)       --朝左 -1 超右是1	self.mRoleView:init(layer, pos, monsterConfig.icon, self.mGridId)	self:setConfig("role_icon_id", monsterConfig.icon)		self.mInfoView = MonsterInfoView.new()	self.mInfoView:init(self)end--通过格子id匹配怪物function RoleMonster:compareByGridId(gridId)	return self.mGridId == gridIdend--强制杀死rolemonsterfunction RoleMonster:cleanupIllusion()     --kill self    self:setConfig("is_knockout", true)    self:bearDamage(-999999999)    GridMgr.knockout(self.mGridId, 0, true)    RoleMgr.removeOtherHalo(self)    self.mRoleView:onKnockout("normal")    self.mInfoView:cleanup()    --RoleMgr.removeMonster(self.mGridId)    RoleMgr.removeRole(self)end--被K.Ofunction RoleMonster:knockout()	--重生	local respawnTimes = self:getConfig("respawn_count")	if respawnTimes > 0 then        cclog("SL怪物不死BUG_1",respawnTimes,self.mGridId)		respawnTimes = respawnTimes - 1		self:setConfig("respawn_count", respawnTimes)        self.mRoleView.mMoveNode:setVisible(false)        local function callback()            self.mRoleView.mMoveNode:setVisible(true)            self:respawn()        end        local effect = EffectRespawn.new()        effect:init(self:getBottomPos(), callback)        effect:play()		return	end		self:setConfig("is_knockout", true)	local bBody = true		--是否留下尸体	if self:getConfig("death_display_mode") == "escape" then		bBody = false	end		--召唤	local summonId = self:getConfig("summon_after_death")	GridMgr.knockout(self.mGridId, summonId, bBody)	--RoleMgr.startHaloForMonster(self, false)    RoleMgr.removeOtherHalo(self)	self.mRoleView:onKnockout(self:getConfig("death_display_mode"))	self.mInfoView:cleanup()	--RoleMgr.removeMonster(self.mGridId)    RoleMgr.removeRole(self)    		--金币掉落	local coins = self:getConfig("drop_out_coins")	if coins > 0 then		local effect = EffectGainCoins.new()		effect:init(nil, coins, self:getMiddlePos())		effect:play()	end		--对玩家造成虚弱光环	--RoleMgr.startHaloForPlayer(self, false)    RoleMgr.cleanupIllusion(self:getConfig("role_id"))end--怪物的行为动作function RoleMonster:getAction()	--self.mRoleAction:calc()	return self.mRoleActionend--怪物重生function RoleMonster:respawn()    --清除buff	--local buff = self:getDataInfo("buff")	--buff:cleanupAll()    BuffMgr.clearBuff(self,bufftype)    --技能 重置    local skill = self:getDataInfo("skill")    skill:onStep("max_cd")    self.mInfoView:updateAll()	self:changeShader()	local attribute = self.mData.mAttribute	attribute:respawnWithRate(self:getConfig("respawn_life_rate"), self:getConfig("respawn_atk_rate"))	self.mInfoView:updateAll()end--回合计数function RoleMonster:roundStep()	if self:getConfig("is_knockout") then		return	end    if self:isAlive() == false then        return    end  	self:summonStep()	self:franticStep()	self:stealthStep()	self:updateInfoView("attr")    self:separateBody()    self:devour()    self:stealMoneyStep()    self:roleSummonStep()endfunction RoleMonster:roleSummonStep()end --偷钱怪function RoleMonster:stealMoneyStep()	--生存几回合	local stayRound = self:getConfig("stay_round")	if stayRound == -1 then		return	end	stayRound = stayRound - 1	self:setConfig("stay_round", stayRound)	if stayRound > 0 then		return	end		--偷钱怪逃跑	if self:getConfig("steal_coin_rate") > 0 then		--逃跑,把归还的钱清零		self:setConfig("death_display_mode", "escape")		self:setConfig("drop_out_coins", 0)		self:knockout()	endend --吞噬怪function RoleMonster:devour()    local devour_count = self:getConfig("devour_count")  --吞噬回合计数    local devour_round = self:getConfig("devour_round")  --吞噬间隔         if devour_round >  0 and  self:isCommonAttackValid() == true then          devour_count = devour_count + 1         self:setConfig("devour_count",devour_count)         if devour_count >=  devour_round then               local pRet,poslist = GridMgr.devourAll(self)               self:setConfig("devour_count",0)               if pRet then                    local behavior = BehaviorInfo.new()                   behavior:init("devour", self:getMiddlePos())                   behavior:play()                                       local effect = Effectdevor.new()                   effect:init(self:getMiddlePos(),poslist)                   effect:play()                             end         end      endend--分身怪逻辑计算--Manta Style 幻影斧function RoleMonster:separateBody()    if self:getConfig("is_separate") then        return    end    --role:setConfig("separateBody_count", 0)                     --分身间隔  计数              local separateBody_round = self:getConfig("separateBody_round")    --分身数量    local separateBody_amount = self:getConfig("separateBody_amount")  --分身间隔    local separateBody_count = self:getConfig("separateBody_count")     if separateBody_round >  0 and  self:isCommonAttackValid() == true then         separateBody_count = separateBody_count + 1        self:setConfig("separateBody_count",separateBody_count)        if separateBody_count >=  separateBody_round then           local bRet,posList = GridMgr.separateMonster(separateBody_amount, self)           if bRet then               local behavior = BehaviorInfo.new()               behavior:init("separateBody", self:getMiddlePos())               behavior:play()               local effect = EffectSeparatBody.new()               effect:init(self:getMiddlePos(),posList)	           effect:play()                --kill self               self:setConfig("is_knockout", true)               self:bearDamage(-999999999)               GridMgr.separate(self.mGridId)               RoleMgr.removeOtherHalo(self)               self.mRoleView:onKnockout("normal")               self.mInfoView:cleanup()               --RoleMgr.removeMonster(self.mGridId)               RoleMgr.removeRole(self)           end        end     endend--召唤怪逻辑计算function RoleMonster:summonStep()    if self:getConfig("is_separate") then        return    end   local summon_round = self:getConfig("summon_round")   local summon_monsterid = self:getConfig("summon_monsterid")   if summon_round >  0 and  self:isCommonAttackValid() == true then         local summon_round_count = self:getConfig("summon_round_count")        summon_round_count = summon_round_count + 1        self:setConfig("summon_round_count",summon_round_count)        if summon_round_count >= summon_round then             self:setConfig("summon_round_count",0)                    --[[  飘字 ]]--           local behavior = BehaviorInfo.new()           behavior:init("summon", self:getBottomPos())           behavior:play()                       self.mRoleView:onMagic()           GridMgr.summonMonster(self:getConfig("summon_amount"), summon_monsterid,self)        end   end end--狂化逻辑计算function RoleMonster:franticStep()    if self:getConfig("is_separate") then        return    end	--狂化计算	local fr = self:getConfig("frantic_rate")	if fr > 0 then		if self.mData.mAttribute:frantic(fr) then			local behavior = BehaviorInfo.new()			behavior:init("frantic", self:getBottomPos())			behavior:play()		end	endend--潜行逻辑计算function RoleMonster:stealthStep()    if self:getConfig("is_separate") then        return    end	if self:getConfig("stealth_available") == false then		return	end	local status = self:getDataInfo("status")	if self:getConfig("is_on_stealth") then		--潜行中		if self:getConfig("stealth_hide_count") > 0 then			self:updateConfig("stealth_hide_count", -1)		end		if self:getConfig("stealth_hide_count") <= 0 then			--现身			status:setStatus("status_stealth", false)			self:setConfig("stealth_show_count", self:getConfig("stealth_show_round"))			self:setConfig("is_on_stealth", false)			self.mRoleView:onStealth(false)		end	else		--已现身		if self:getConfig("stealth_show_count") > 0 then			self:updateConfig("stealth_show_count", -1)		end				if self:getConfig("stealth_show_count") <= 0 then			--隐身			status:setStatus("status_stealth", true)			self:setConfig("stealth_hide_count", self:getConfig("stealth_hide_round"))			self:setConfig("is_on_stealth", true)			self.mRoleView:onStealth(true)						--字体			local behavior = BehaviorInfo.new()			behavior:init("hidden", self:getBottomPos())			behavior:play()						--烟雾			local effect = EffectAnimate.new()			effect:init(self:getMiddlePos(), 58)			effect:play()		end	endend