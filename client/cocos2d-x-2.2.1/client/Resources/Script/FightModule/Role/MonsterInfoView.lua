------------------------------------------------------------------------ 作者：lewis-- 日期：2013-3-31-- 描述：怪物状态视图----------------------------------------------------------------------MonsterInfoView = class(RoleInfoView)local cell_width = 128local cell_height = 120function MonsterInfoView:ctor()	self.mRole = nil			--绑定的角色	self.mLifeIcon		= nil	--生命图标	self.mLifeBar		= nil	--生命槽	self.mLabels		= {}	--1生命，2攻击力，3速度	self.mOriginals		= {}	--原始数据		--self.mSkillProgressTB	= {}    self.mSkillCircleLightTB	= {}    self.mSkillCircleProgressTB	= {}    self.mSkillCircleNumberTB	= {}endfunction MonsterInfoView:init(role)	self.mRole = role	local layer = RoleMgr.getConfig("rmc_monster_info_parent_layer")	self.mRootView = CCLayer:create()   -- self.mRole:setConfig("role_infoViewRoot",self.mRootView)	layer:addChild(self.mRootView)	local pos = self.mRole:getPosition()	pos = ccp(pos.x - 60, pos.y)	self.mRootView:setPosition(pos)		self:createCategoryIcon()	self:createAttackLabel()	self:createLifeBar()	self:createSkillProgress()	self:createName()	self:initBuff()endfunction MonsterInfoView:cleanup()	if self.mRootView == nil then		return	end	self.mRootView:removeFromParentAndCleanup(true)	self.mRootView = nilend--更新全部function MonsterInfoView:updateAll()	self:updateAttr()	self:updateSkill()	self:updateBuff()end-----------------------------------------------------------------------------------------------------------基本数据--------------------------------------------------------------------------------------------------------------local function numberModifiedAction(node)	local scale = 2.0	node:stopAllActions()	node:setScale(1.0)	local atc1 = CCEaseBackInOut:create(CCScaleBy:create(0.20, scale))	local atc2 = CCEaseBackInOut:create(CCScaleBy:create(0.07, 1 / scale))	node:runAction(CCSequence:createWithTwoActions(atc1, atc2))end--更新主要属性function MonsterInfoView:updateAttr()	--更新生命条	local attribute = self.mRole.mData.mAttribute	local percentage = attribute:getByName("life") / attribute:getMaxAttrWithName("life")    if tolua.isnull(self.mLifeBar) == nil then return end 	local texture = self.mLifeBar:getTexture()	local w = texture:getContentSize().width	local h = texture:getContentSize().height	self.mLifeBar:setTextureRect(CCRectMake(0, 0, w * percentage, h))		--更新攻击力	local i = 2	local cur = attribute:getByIndex(i)	local label = self.mLabels[i]	label:setString(string.format("%d", cur))	local color = attribute:getColor(i)	self:labelOnColor(label, color)	if cur ~= self.mOriginals[i] then		numberModifiedAction(label)		self.mOriginals[i] = cur	end    if self.mRole.mEnemyInfoView ~=nil then        self.mRole.mEnemyInfoView:updateAttr()    end endfunction MonsterInfoView:initBuff()	--buff	local unit = self.mBuffView["buff"]	unit.labelPos 		= ccp(114, 80)	unit.labelScale		= 0.5	unit.startPos 		= ccp(cell_width / 2, cell_height / 2)	unit.iconPos		= ccp(cell_width, cell_height - 80)	unit.iconScale 		= 0.5    unit.buffIconPos    = ccp(94, 80)    unit.bufficonScale 	= 0.5	--debuff	unit = self.mBuffView["debuff"]	unit.labelPos 		= ccp(114, 18)	unit.labelScale		= 0.5	unit.startPos 		= ccp(cell_width / 2, cell_height / 2)	unit.iconPos		= ccp(cell_width, cell_height - 110)	unit.iconScale 		= 0.5    unit.buffIconPos    = ccp(94, 18)    unit.bufficonScale 	= 0.5	--self:createBuffLabel()end--更新bufffunction MonsterInfoView:updateBuff()	local buffTb = self.mRole:getDataInfo("buff")    local newbuff = nil     for key,buffObj in pairs(buffTb) do         if buffObj:getBuffConfig("new_flag") == true then             newbuff = buffObj            break        end     end     --更新BUFF的数量标记  --先注释    --[[	for key, value in pairs(self.mBuffView) do        local amount = BuffMgr.getBuffAmonutByType(self.mRole,key)        self:updateBuffUnit(key,amount)	end    ]]--    --播放新BUFF动画
    if newbuff ~= nil then 
         local iconRes = newbuff:getBuffConfig("buff_icon")
         --是否需要飘ICON
        if newbuff:getBuffConfig("buff_type") == 4 then  --如果是光环BUFF
            local behavior = BehaviorInfo.new()			behavior:init("weak_halo", self.mRole:getBottomPos())   --FIXME weak_halo			behavior:play()
        elseif iconRes~=nil and string.find(iconRes,".png") then 
             local unit = self.mBuffView[self:getBuffType(newbuff:getBuffConfig("buff_type"))]
             local sprite = CCSprite:createWithSpriteFrameName(iconRes)	         self.mRootView:addChild(sprite)	         sprite:setPosition(unit.startPos)	         sprite:setScale(unit.iconScale)	         unit.icon = sprite	         buffIconEnterAction(sprite, unit.startPos, unit.iconPos, unit.iconScale)
        end
        newbuff:setBuffConfig("new_flag",false)
    endend-----------------------------------------------------------------------------------------------------------创建组件----------------------------------------------------------------------------------------------------------------攻击力视图function MonsterInfoView:createAttackLabel()	-- 攻击力图标	local sprite = CCSprite:createWithSpriteFrameName("monsterattack.png") 	self.mRootView:addChild(sprite)	sprite:setPosition(ccp(cell_width * 0+10, 5))	sprite:setAnchorPoint(ccp(0.5, 0.0))		--攻击力数字	local attribute = self.mRole.mData.mAttribute	local atk = attribute:getByIndex(2)	local label = CCLabelAtlas:create(string.format("%d", atk), "num_black.png", 24, 32, 48)	label:setScale(0.7)	label:setAnchorPoint(ccp(0.0, 0.0))	label:setPosition(ccp(cell_width * 0.1+10, 5))    self.mRootView:addChild(label, 1)	self.mLabels[2] = label	self.mOriginals[2] = atkend--生命条function MonsterInfoView:createLifeBar()	-- 背景	local bg = CCSprite:createWithSpriteFrameName("monsterlife.png")	self.mRootView:addChild(bg)	bg:setPosition(ccp(5, 0))	bg:setAnchorPoint(ccp(0.0, 0.0))	    --monsterlife2.png  红
    --monsterlife3.png  蓝	local progress = nil     if self.mRole:getConfig("role_group_id") == 1 then         progress = CCSprite:create("monsterlife2.png")    else         progress = CCSprite:create("monsterlife3.png")    end 	self.mRootView:addChild(progress)	progress:setPosition(ccp(6, 1))	progress:setAnchorPoint(ccp(0.0, 0.0))	self.mLifeBar = progressend--类型图标function MonsterInfoView:createCategoryIcon()	local config = self.mRole:getConfig("role_config")	local iconType = config.type	if iconType == nil then return end	if iconType < 2 then return end	local sprite = CCSprite:createWithSpriteFrameName(string.format("monstersign_%d.png", iconType))	sprite:setPosition(ccp(0+17, cell_height - 14))	self.mRootView:addChild(sprite)end--技能进度条function MonsterInfoView:createSkillProgress()    local function playBreathLamp(node)
	    local array = CCArray:create()
	    array:addObject(CCFadeOut:create(0.2))
	    array:addObject(CCFadeIn:create(0.2))
        node:runAction(CCRepeatForever:create(CCSequence:create(array)))    end	local skill = self.mRole.mData.mSkill	local tb = skill:getTB()	local idx = 1    for key,value in pairs(tb) do         if value.isValid and value.maxCD > 0 then--只创建主动技能            --技能背景            local bgCircle = CCSprite:createWithSpriteFrameName("monster_skill_bg"..value.skill_classification..".png")            bgCircle:setPosition(ccp(cell_width-30, cell_height - bgCircle:getContentSize().height*(key-1)-20))            self.mRootView:addChild(bgCircle)            self.mSkillCircleProgressTB[key] = bgCircle            --技能背景冷却呼吸灯            local bgCircleLight = CCSprite:createWithSpriteFrameName("monsterwhite.png")            bgCircleLight:setPosition(ccp(cell_width-30, cell_height - bgCircle:getContentSize().height*(key-1)-20))            self.mRootView:addChild(bgCircleLight)            self.mSkillCircleLightTB[key]=bgCircleLight            bgCircleLight:setVisible(false)            playBreathLamp(bgCircleLight)            --技能数值	        local skill_label = CCLabelAtlas:create(string.format("%d", 10), "num_black.png", 24, 32, 48)	        skill_label:setScale(0.4)            skill_label:setAnchorPoint(ccp(0.5,0.5))            skill_label:setPosition(ccp(cell_width-29, cell_height - bgCircle:getContentSize().height*(key-1)-21))            self.mRootView:addChild(skill_label)            self.mSkillCircleNumberTB[key] = skill_label        end    endend--更新技能function MonsterInfoView:updateSkill()	local skill = self.mRole.mData.mSkill	local tb = skill:getTB()    --[[	for key, value in pairs(tb) do		if value.isValid and value.maxCD > 0 then--只创建主动技能			local unit = self.mSkillProgressTB[key]			local progress = unit.progress			local texture = progress:getTexture()			local w = texture:getContentSize().width			local h = texture:getContentSize().height			progress:setTextureRect(CCRectMake(0, h * (1.0 - value.progress), w, h * value.progress))		end	end    ]]--    for key,value in pairs(tb) do         if value.isValid and value.maxCD > 0 then--只创建主动技能            local label = self.mSkillCircleNumberTB[key]             local lamp = self.mSkillCircleLightTB[key]             --update(value.progress, value.needCD)	        if value.progress < 1.0 then		        label:setVisible(true)		        label:setString(string.format("%d", value.needCD))                lamp:setVisible(false)                --self.mHasCDCount = 0	        else		        --Lewis:shaderSpriteResetTime(self.mSpriteIcon)                lamp:setVisible(true)		        label:setVisible(false)		        --self.mbOnCD = false		        --if self.mHasCDCount == 0 then			        --self:playAfterCDEffect()		        --end		        --self.mHasCDCount = self.mHasCDCount + 1	        end        end    end      --[[    位置不够敌人技能不展示   if self.mRole.mEnemyInfoView ~=nil then        self.mRole.mEnemyInfoView:updateSkill()   end    ]]--end--[[--更新function PlayerSkillBtn:update(percentage, needCD)	if 0 == self.mSkillId then		return	end	if percentage < 1.0 then		self.mMaskProgress:setVisible(true)		if percentage == 0.0 then			self.mMaskProgress:setPercentage(99.99)		else			local to = CCProgressTo:create(0.2, (1.0 - percentage) * 100)			self.mMaskProgress:runAction(to)		end		self.mbOnCD = true		self.mLabelCoolDown:setVisible(true)		self.mLabelCoolDown:setString(string.format("%d", needCD))        self.mHasCDCount = 0	else		Lewis:shaderSpriteResetTime(self.mSpriteIcon)		self.mMaskProgress:setVisible(false)		self.mLabelCoolDown:setVisible(false)		self.mbOnCD = false		if self.mHasCDCount == 0 then			self:playAfterCDEffect()		end		self.mHasCDCount = self.mHasCDCount + 1	endend]]----创建怪物名字function MonsterInfoView:createName()	local name = self.mRole:getConfig("role_nick_name")	local color = ccc3(255, 255, 255)		--名字	local label = CommonFunc_createCCLabelTTF(ccp(0.5, 0.5), nil, nil, 19, color, name)	self.mRootView:addChild(label, 2)	label:setPosition(ccp(cell_width / 2, cell_height + 20))		--名字框	local bg = CCScale9Sprite:create("monster_name_bg.png")	self.mRootView:addChild(bg)	local size = label:getContentSize()	size.width = size.width + 20	bg:setCapInsets(CCRectMake(11,11,11,11))	bg:setPreferredSize(size)	bg:setAnchorPoint(ccp(0.5,0.5))    bg:setPosition(ccp(cell_width / 2, cell_height + 20))end