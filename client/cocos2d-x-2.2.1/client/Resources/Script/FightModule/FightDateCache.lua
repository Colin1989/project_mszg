------------------------------------------------------------------------ 作者：shenl-- 日期：2014-03-03-- 描述：游戏进行中缓存数据----------------------------------------------------------------------FightDateCache = {}local function localPrint(...)	if true then return end	lewisPrint("FightDateCache", ...)endlocal mDataCacheTB = nil--初始化缓存数据function FightDateCache.initData()	mDataCacheTB = {}	mDataCacheTB["fd_game_mode"]				= 1				--游戏模式,1普通关卡,2推塔,3竞技场,4训练比赛,5天梯赛 6活动副本    mDataCacheTB["fd_boss_rule_id"]          = -1               --BOSS战流程ID	mDataCacheTB["fd_game_id"]					= 0				--游戏ID	mDataCacheTB["fd_game_start"]				= false			--战斗是否开始	mDataCacheTB["fd_game_over"]				= false			--战斗是否结束	mDataCacheTB["fd_floor_index"]				= 1				--当前第几层	mDataCacheTB["fd_max_floor"]				= 1				--总共多少层	mDataCacheTB["fd_pass_mode"]				= 1				--过关方式1,拾取钥匙,2击杀所有怪物,3击败敌人	mDataCacheTB["fd_copy_id"]					= 0				--副本ID	mDataCacheTB["fd_new_monster_tb"]			= {}			--新怪物表	mDataCacheTB["fd_new_monster_cache"]		= {}			--新怪物cache表	mDataCacheTB["fd_killed_monster_tb"]		= {}			--已击杀怪物表		mDataCacheTB["fd_map_data"]					= {}			--地图数据缓存	mDataCacheTB["fd_map_scene_id"]				= 0				--当前地图场景ID		mDataCacheTB["fd_push_tower_floor"]			= 1				--推塔层数	mDataCacheTB["fd_total_round"]				= 0				--第层已用回合数	mDataCacheTB["fd_rest_round"]				= 300			--剩余操作回合数	mDataCacheTB["fd_push_tower_buy_times"]		= 0				--推塔购买回合次数	mDataCacheTB["fd_push_tower_max_buy_times"]	= 0				--推塔最大购买回合次数		mDataCacheTB["fd_killed_monster_count"]		= 0				--已击杀怪物数	mDataCacheTB["fd_drop_out_goods"]			= {}			--击杀怪物掉落的物品	mDataCacheTB["fd_drop_out_count"]			= 0				--掉落物品个数	mDataCacheTB["fd_coin_count"]				= 0				--金币数	mDataCacheTB["fd_respawn_count"]			= 0				--复活次数	mDataCacheTB["fd_gem_tb"]					= {}			--推塔拾取的宝石	mDataCacheTB["fd_gem_count"]				= 0				--推塔拾取的宝石统计		--战斗中缓存数据	mDataCacheTB["fd_player_on_controll"]		= true			--玩家是否可以操作		mDataCacheTB["fd_init_global"]				= false			--是否初始过全局的变量	mDataCacheTB["fd_friend_role_type"]			= 0				--援军职业类型		mDataCacheTB["fd_paid_for_auto_play"]		= false			--自动战斗是否已付费	mDataCacheTB["fd_full_auto_play"]			= false			--完全自动战斗		mDataCacheTB["fd_round_overlap"]			= true			--回合是否可重叠		mDataCacheTB["fd_show_auto_play_btn"]		= true			--是否显示自动战斗按钮		mDataCacheTB["fd_monster_enter_duration"]	= 0.0			mDataCacheTB["fd_floor_killed_monster"]		= 0				--当层已击杀怪物数	mDataCacheTB["fd_floor_total_monster"]		= 0				--当层总共怪物数	mDataCacheTB["fd_stage_total_monster"]		= 0				--当前关卡总怪物数		mDataCacheTB["fb_round_count"]		        = 1			    --副本回合计数	mDataCacheTB["fd_key_count"]		        = 0			    --钥匙个数		mDataCacheTB["fd_game_pause"]				= false			--是否暂停中	mDataCacheTB["fd_enemy_knockout"]			= false			--竞技场敌人是否被K.O	mDataCacheTB["fd_player_knockout"]			= false			--玩家是否被K.O    mDataCacheTB["fd_global_lockevent"]			= false			--全局锁事件endfunction FightDateCache.PVEorPVP()    local mode = FightDateCache.getData("fd_game_mode")    if mode == 3 or mode == 4 or mode == 5 then         return "PVP"    end     return "PVE"end --获得数据function FightDateCache.getData(name)    if mDataCacheTB == nil then         return     end 	local ret = mDataCacheTB[name]	if ret == nil then		print("invalid data name", name)		return	end	return retend--设置数据function FightDateCache.setData(name, value)	if mDataCacheTB[name] == nil then		print("invalid data name", name)		return	end	mDataCacheTB[name] = valueend--更新数据function FightDateCache.updateData(name, value)	if mDataCacheTB[name] == nil then		print("invalid data name", name)		return	end	mDataCacheTB[name] = mDataCacheTB[name] + valueend--获取当前金币function FightDateCache.getCoins()	return FightDateCache.getData("fd_coin_count")end--获得金币function FightDateCache.gainCoins(amount)	local coins = FightDateCache.getData("fd_coin_count")	coins = coins + amount	FightDateCache.setData("fd_coin_count", coins)end--拾取掉落物品function FightDateCache.gainDropOut(id)	FightDateCache.updateData("fd_drop_out_count", 1)	local tb = FightDateCache.getData("fd_drop_out_goods")	table.insert(tb, id)	EventCenter_post(EventDef["ED_COLLECT_ITEM"], id)end--杀死怪FightDateCache.killMonster = function(id)	FightDateCache.updateData("fd_killed_monster_count", 1)	local tb = FightDateCache.getData("fd_killed_monster_tb")	table.insert(tb, id)	local copyId = FightDateCache.getData("fd_copy_id")	EventCenter_post(EventDef["ED_KILL_MONSTER"], {monsterId=id, locationId=copyId})end--根据战斗类型获取复活类型(这是由于客户端战斗类型和服务端的类型不统一,需要做一层转换)FightDateCache.getRebornType = function()	local fdGameMode = mDataCacheTB["fd_game_mode"]	if 1 == fdGameMode then		return game_type["common"]	elseif 2 == fdGameMode then		return game_type["push_tower"]	elseif 3 == fdGameMode then		return game_type["game_challenge"]	elseif 4 == fdGameMode then		return game_type["game_challenge"]	elseif 5 == fdGameMode then		return game_type["game_challenge"]	elseif 6 == fdGameMode then		return game_type["activity_copy"]	endend