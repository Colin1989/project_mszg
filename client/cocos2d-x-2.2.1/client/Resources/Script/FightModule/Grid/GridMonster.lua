------------------------------------------------------------------------ 作者：lewis-- 日期：2013-04-11-- 描述：怪物格子----------------------------------------------------------------------GridMonster = class(Grid)--构造function GridMonster:ctor()	self.mAttackType 	= 0		--怪物攻击类型,1为主动怪	self.mMonsterId 	= 0		--怪物id	self.mDropOut		= nil	--掉落表	self.mMonsterRole	= nil	--格子上的怪物end--绑定数据function GridMonster:bindData(data)	self.mMonsterId = tonumber(data.monsterid)	self.mAttackType = ModelMonster.isInitiativeMonster(self.mMonsterId) and 1 or 0	self.mDropOut = data.dropout		--判定是否可以强制打开的格子	local monsterConfig = ModelMonster.getMonsterById(self.mMonsterId)	local tb = SkillMgr.parseSkillID(monsterConfig.skills)	for key, value in pairs(tb) do		local config = SkillConfig.getSkillBaseInfo(tonumber(value))		if config ~= nil then			if config.skill_cd < 0 then		--该怪物一出场就使用技能,不能被强制打开				self:setConfig("enable_force_open", false)				break			end		end	end		--预加载怪物资源	FightResLoader.preloadMonsterRes(self.mMonsterId)	--增加怪物数量end--开始运作，等待事件function GridMonster:run()	--主动怪主动出场	if self.mAttackType == 0 then		return	end	self:openGrid()	self:effectRemoveBg()	self:showMonster()end--外部触发事件function GridMonster:onEvent()	if self:getConfig("is_invalid") then return end	--打开格子	if self:getConfig("is_opened") == false then		--周边有怪物或被迷雾遮罩		if self:isCanOpened() == false then 			GridMgr.setConfig("gmc_touch_effect", false)			return 		end		self:openGrid()		self:openFogMask()		self:effectRemoveBg()		self:showMonster()		self:guardAction(true)		self:relativeMonster()        self:triggerNextRound()		return	end		--开始战斗	if self.mMonsterRole ~= nil and self.mMonsterRole:isAlive() then        if self.mMonsterRole:getConfig("role_group_id") ~= 0 then 		    BattleMgr.attackMonster(self:getConfig("grid_id"), self:getConfig("is_mask"))        end 	endend--显示出怪物function GridMonster:showMonster()	self:setConfig("event_name", "monster")	local pos = self:getPosition()	pos.y = pos.y - 50	self.mMonsterRole = RoleMgr.createMonster(self:getConfig("grid_id"), pos, self.mMonsterId)	MonsterIntroduceHelper.monsterAppear(self:getConfig("grid_id"), pos, self.mMonsterId)end--召唤怪物function GridMonster:summonMonster(caster)    local effect = EffectSummon.new()    effect:init(self:getPosition(),caster)    effect:play()	self:showMonster()    --self:guardAction(true)    self.mMonsterRole.mRoleView:onTintToBright(0.5)end--分身现身function GridMonster:mantaStyle()	local effect = EffectAnimate.new()	effect:init(self:getMiddlePos(), 33)	effect:play()    self:showMonster()    self:guardAction(true)    self.mMonsterRole.mRoleView:onFadeIn(0.2)end--显示怪物尸体function GridMonster:effectShowBody()	local pos = self:getPosition()	pos.y = pos.y + 50	local layer = GridMgr.getConfig("gmc_item_layer")	local sprite = CCSprite:create("monsterdeath.png")	layer:addChild(sprite)	sprite:setPosition(pos)	self.mSpriteDropOut = sprite	GridMgr.actionDropDown(sprite, 50)    self:setConfig("sprite_monster_body", sprite)end--被K.O烟雾特效function GridMonster:effectKnockout()	local layer = GridMgr.getConfig("gmc_effect_layer")	local sprite = FightAnimationMgr.gridEffectOnce("monster_death_%02d.png", 14, 0.1)	layer:addChild(sprite)	sprite:setPosition(self:getPosition())	sprite:setAnchorPoint(ccp(0.5,0.5))end--怪物被K.Ofunction GridMonster:knockout(summonId, bBody)    local pos = self:getPosition()	pos.y = pos.y - 50	if self:getConfig("is_summon_monster") == false then		FightDateCache.killMonster(self.mMonsterId)        if FightDateCache.getData("fd_pass_mode") == 2 then		    local effect = EffectCollectSoul.new()		    effect:init(pos)		    effect:play()	    else		    LayerGameUI.updateMonsterCnt()	    end	end		--死亡召唤怪物	if summonId ~= 0 then		self:setConfig("is_summon_monster", true)		self.mMonsterId = summonId		self:showMonster()		return	end		--掉落物品特效	SoundDispath.pickupItem("box")		local effect = EffectDropOut.new()	effect:init(pos, self.mDropOut)	effect:play()		--掉落物品放入缓存	for key, value in pairs(self.mDropOut) do		FightDateCache.gainDropOut(value)	end	SoundDispath.pickupItem("box")	GuideEvent.pickupBox()		self:setConfig("event_name", "none")	if bBody then		self:effectKnockout()		self:effectShowBody()	end			if self:getConfig("is_mask") == false then		self:lightupAround()	end		--if self:getConfig("is_summon_monster") then		--self:guardAction(false)    --else    if self.mAttackType == 1 then		self:setConfig("wait_for_clean_fog", true)    else        self:guardAction(false)	end		local isKey = self:getConfig("has_key")	--isKey = true	if isKey and FightDateCache.getData("fd_pass_mode") == 1 then		SoundDispath.pickupItem("key")		local effect = EffectPickupKey.new()		effect:init(self:getMiddlePos())		effect:play()	end    self:setConfig("is_invalid", true)endfunction GridMonster:separate()    if self:getConfig("is_mask") == false then		self:lightupAround()	end		--if self:getConfig("is_summon_monster") then		--self:guardAction(false)    --else    if self.mAttackType == 1 then		self:setConfig("wait_for_clean_fog", true)    else        self:guardAction(false)	end    self:setConfig("is_invalid", true)end--关联怪function GridMonster:relativeMonster()	local relativeTB = ModelMonster.getMonsterById(self.mMonsterId).relative_id		-- 缓存每个怪物的关联怪	--Log(relativeTB)	local tb = GridMgr.getConfig("gmc_grid_table")	for key, value in pairs(tb) do		if value:getConfig("tag") == "monster" and value:getConfig("is_opened") == false then			if value:isRelative(relativeTB, value.mMonsterId) then	--关联				value:createRelativeMonster()			end		end	endend--是否关联function GridMonster:isRelative(tb, monsterid)	for key, value in pairs(tb) do		--print(value, monsterid)		if tonumber(value) == monsterid then			return true		end	end	return falseend--创建关联怪function GridMonster:createRelativeMonster()	--取消X限制	if self:getConfig("monster_around_cnt") > 0 then		self:setConfig("monster_around_cnt", 1)		self:cancelGuard()	end	self:openGrid()	self:openFogMask()	--self:effectRemoveBg()	self:showMonster()	self:guardAction(true)end--长按事件function GridMonster:onPress()	--怪物不存在了	if self:getConfig("event_name") == "none" then		return	end	local monster = self.mMonsterRole	if monster == nil then		return	end	local tb = {}	tb.gridId = self:getConfig("grid_id")    tb.camp = monster:getConfig("role_group_id")	UIManager.push("UI_MonsterInfo", tb)end