------------------------------------------------------------------------ 作者：shenl-- 日期：2013-12-16-- 描述：玩家属性建模----------------------------------------------------------------------ModelPlayer = {}local mRoleTable = XmlTable_load("role_tplt.xml", "id")						-- 角色表local mRoleUpAppenceTable = XmlTable_load("role_advance_tplt.xml", "id")	-- 角色进阶表现表local mRoleUpgradeTable = XmlTable_load("role_upgrad_tplt.xml", "id") 		-- 角色升级表local mRoleExpTable = XmlTable_load("role_exp_tplt.xml", "id") 				-- 角色经验表local mRoleInfo = nil														-- 角色信息------------------------------------------------------------------------ 重设玩家信息ModelPlayer.resetPlayerInfos = function()	local infos = 	{		-- 当前信息		["id"] = 0,								-- 角色id		["nickname"] = "",						-- 昵称		["role_status"] = "0",					-- 角色状态(需要解析)		["roletype"] = 0,						-- 角色类型		["skills"] = {[1] = 0, [2] = 0},		-- 天赋技能,包含两个		["divine_level"] = 0,					-- 占卜等级		["level"] = 0,							-- 玩家等级		["exp"] = 0,							-- 经验		["gold"] = 0,							-- 金币		["emoney"] = 0,							-- 魔石		["summon_stone"] = 0,					-- 召唤石		["power_hp"] = 0,						-- 体力		["recover_time_left"] = 0,				-- 体力下一次恢复时间		["power_hp_buy_times"] = 0,				-- 体力购买次数		["pack_space"] = 0,						-- 背包空间大小		["friend_point"] = 0,					-- 友情点		["point"] = 0,							-- 战绩		["honour"] = 0,							-- 荣誉值		["sculpture_frag"] = 0,					-- 符文碎片数量		["battle_power"] = 0,					-- 战斗力		["alchemy_exp"] = 0,					-- 炼金经验值		["potence_level"] = 0,					-- 潜能等级		["advanced_level"] = 1,					-- 进阶等级		["battle_soul"] = 0,					-- 战魂点数		["vip_level"] = 0,						-- vip等级		["money"] = 0,							-- 充值记录		-- 之前信息		["pre_level"] = 0,						-- 之前玩家等级		["pre_exp"] = 0,						-- 之前经验		["pre_gold"] = 0,						-- 之前金币		["pre_emoney"] = 0,						-- 之前魔石		["pre_summon_stone"] = 0,				-- 之前召唤石		["pre_power_hp"] = 0,					-- 之前体力		["pre_friend_point"] = 0,				-- 之前友情点		["pre_point"] = 0,						-- 之前积分		["pre_honour"] = 0,						-- 之前荣誉值		["pre_battle_power"] = 0,				-- 之前战斗力		["pre_alchemy_exp"] = 0,				-- 之前炼金经验值		["pre_advanced_level"] = 0,				-- 之前进阶等级	}	mRoleInfo = infosendModelPlayer.resetPlayerInfos()------------------------------------------------------------------------ 获取角色信息ModelPlayer.getRoleRow = function(id)	local row = XmlTable_getRow(mRoleTable, id, true)	local roleRow = {}	roleRow.id = row.id + 0									-- 角色id	roleRow.name = row.name									-- 名称	roleRow.armor = row.armor + 0							-- 初始护甲	roleRow.weapon = row.weapon + 0							-- 初始武器	roleRow.skill1 = row.skill1 + 0							-- 初始技能1	roleRow.skill2 = row.skill2 + 0							-- 初始技能2	roleRow.describe = row.describe							-- 说明	roleRow.default_sculpture = row.default_sculpture + 0	-- 默认援军技能	roleRow.icon = row.icon + 0								-- 		return roleRowend------------------------------------------------------------------------ 获取玩家升级信息,通过"职业"和"等级"ModelPlayer.getRoleUpgradeRow = function(roletype, level)	local id = tonumber(roletype)*1000 + tonumber(level)	local row = XmlTable_getRow(mRoleUpgradeTable, id, true)	local roleUpgradeRow = {}	roleUpgradeRow.id = row.id + 0										-- 角色id	roleUpgradeRow.name = row.name										-- 名称	roleUpgradeRow.life = row.life + 0									-- 生命	roleUpgradeRow.atk = row.atk + 0									-- 攻击力	roleUpgradeRow.speed = row.speed + 0								-- 速度	roleUpgradeRow.hit_ratio = row.hit_ratio + 0						-- 命中				 	roleUpgradeRow.critical_ratio = row.critical_ratio + 0				-- 暴击	 	roleUpgradeRow.miss_ratio = row.miss_ratio + 0						-- 闪避	 	roleUpgradeRow.tenacity = row.tenacity + 0							-- 韧性	roleUpgradeRow.combat_effectiveness = row.combat_effectiveness + 0	-- 战斗力	return roleUpgradeRowend------------------------------------------------------------------------ 获取角色经验信息ModelPlayer.getRoleExpRow = function(level)	local row = XmlTable_getRow(mRoleExpTable, level, true)	local roleExpRow = {}	roleExpRow.id = row.id + 0											-- 角色等级	roleExpRow.exp = row.exp + 0										-- 经验值		return roleExpRowend------------------------------------------------------------------------ 获取角色经验百分比ModelPlayer.getRoleExpPercent = function(level, experience)	local percent = 0	if 1 == level then		percent = experience/tonumber(mRoleExpTable.map["1"].exp) * 100	else 		local num1 = tonumber(mRoleExpTable.map[tostring(level)].exp)		local num2 = tonumber(mRoleExpTable.map[tostring(level - 1)].exp)		percent = (experience - num2)/(num1 - num2) * 100	end	return percentend------------------------------------------------------------------------ 设置角色idModelPlayer.setId = function(id)	mRoleInfo["id"] = id or 0end------------------------------------------------------------------------ 获取角色idModelPlayer.getId = function()	return mRoleInfo["id"]end------------------------------------------------------------------------ 设置昵称ModelPlayer.setNickName = function(nickName)	mRoleInfo["nickname"] = nickName or ""end------------------------------------------------------------------------ 获取昵称ModelPlayer.getNickName = function()	return mRoleInfo["nickname"]end------------------------------------------------------------------------ 设置角色状态ModelPlayer.setRoleStatus = function(roleStatus)	mRoleInfo["role_status"] = CommonFunc_decimalismToBinary(roleStatus)end------------------------------------------------------------------------ 获取角色状态ModelPlayer.getRoleStatus = function()	return mRoleInfo["role_status"]end------------------------------------------------------------------------ 设置角色类型ModelPlayer.setRoleType = function(roleType)	mRoleInfo["roletype"] = roleType or 0end------------------------------------------------------------------------ 获取角色类型ModelPlayer.getRoleType = function()    if FightDateCache.getData("fd_copy_id") == FIRSTCOPYID then
        return FIRSTTYPE 
	end	return mRoleInfo["roletype"]end------------------------------------------------------------------------ 设置天赋技能ModelPlayer.setSkill = function(position, skillId)	mRoleInfo["skills"][position] = skillId or 0end------------------------------------------------------------------------ 获取天赋技能ModelPlayer.getSkill = function(position)	return mRoleInfo["skills"][position]end------------------------------------------------------------------------ 设置当前占卜等级ModelPlayer.setDivineLevel = function(divineLevel)	mRoleInfo["divine_level"] = divineLevel or 0end------------------------------------------------------------------------ 获取当前占卜等级ModelPlayer.getDivineLevel = function()	return mRoleInfo["divine_level"]end------------------------------------------------------------------------ 设置玩家等级ModelPlayer.setLevel = function(level)	if 0 == mRoleInfo["level"] then		mRoleInfo["pre_level"] = level or 0	else		mRoleInfo["pre_level"] = mRoleInfo["level"]	end	mRoleInfo["level"] = level or 0end------------------------------------------------------------------------ 获取玩家等级:当前,之前ModelPlayer.getLevel = function()    if FightDateCache.getData("fd_copy_id") == FIRSTCOPYID then
        return FIRSTLEVEL,FIRSTLEVEL-1
	end	return mRoleInfo["level"], mRoleInfo["pre_level"]end------------------------------------------------------------------------ 设置经验ModelPlayer.setExp = function(experience)	if 0 == mRoleInfo["exp"] then		mRoleInfo["pre_exp"] = experience or 0	else		mRoleInfo["pre_exp"] = mRoleInfo["exp"]	end	mRoleInfo["exp"] = experience or 0end------------------------------------------------------------------------ 获取经验:当前,之前ModelPlayer.getExp = function()	return mRoleInfo["exp"], mRoleInfo["pre_exp"]end------------------------------------------------------------------------ 设置金币ModelPlayer.setGold = function(gold)	if 0 == mRoleInfo["gold"] then		mRoleInfo["pre_gold"] = gold or 0	else		mRoleInfo["pre_gold"] = mRoleInfo["gold"]	end	mRoleInfo["gold"] = gold or 0end------------------------------------------------------------------------ 获取金币:当前,之前ModelPlayer.getGold = function()	return mRoleInfo["gold"], mRoleInfo["pre_gold"]end------------------------------------------------------------------------ 设置魔石ModelPlayer.setEmoney = function(emoney)	if 0 == mRoleInfo["emoney"] then		mRoleInfo["pre_emoney"] = emoney or 0	else		mRoleInfo["pre_emoney"] = mRoleInfo["emoney"]	end	mRoleInfo["emoney"] = emoney or 0end------------------------------------------------------------------------ 获取魔石:当前,之前ModelPlayer.getEmoney = function()	return mRoleInfo["emoney"], mRoleInfo["pre_emoney"]end------------------------------------------------------------------------ 设置召唤石ModelPlayer.setSummonStone = function(summonStone)	if 0 == mRoleInfo["summon_stone"] then		mRoleInfo["pre_summon_stone"] = summonStone or 0	else		mRoleInfo["pre_summon_stone"] = mRoleInfo["summon_stone"]	end	mRoleInfo["summon_stone"] = summonStone or 0    LayerChenallBoss.refreshLeftStone()end------------------------------------------------------------------------ 获取召唤石:当前,之前ModelPlayer.getSummonStone = function()	return mRoleInfo["summon_stone"], mRoleInfo["pre_summon_stone"]end------------------------------------------------------------------------ 设置体力ModelPlayer.setHpPower = function(hpPower)	if 0 == mRoleInfo["power_hp"] then		mRoleInfo["pre_power_hp"] = hpPower or 0	else		mRoleInfo["pre_power_hp"] = mRoleInfo["power_hp"]	end	mRoleInfo["power_hp"] = hpPower or 0		if ModelPlayer.getHpPower() >= PowerConfig["real_max"] then		Toast.Textstrokeshow(GameString.get("PUBLIC_POWER_LIMIT"), ccc3(255, 255, 255), ccc3(0, 0, 0), 30)	endend------------------------------------------------------------------------ 获取体力:当前,之前ModelPlayer.getHpPower = function()	return mRoleInfo["power_hp"], mRoleInfo["pre_power_hp"]end------------------------------------------------------------------------ 设置体力下一次恢复时间ModelPlayer.setRecoverTimeLeft = function(recoverTimeLeft)	mRoleInfo["recover_time_left"] = recoverTimeLeft or 0end------------------------------------------------------------------------ 获取体力下一次恢复时间ModelPlayer.getRecoverTimeLeft = function()	return mRoleInfo["recover_time_left"]end------------------------------------------------------------------------ 设置体力购买次数ModelPlayer.setHpPowerBuyTimes = function(hpPowerBuyTimes)	mRoleInfo["power_hp_buy_times"] = hpPowerBuyTimes or 0end------------------------------------------------------------------------ 获取体力购买次数ModelPlayer.getHpPowerBuyTimes = function()	return mRoleInfo["power_hp_buy_times"]end------------------------------------------------------------------------ 设置背包空间大小ModelPlayer.setPackSpace = function(packSpace)	mRoleInfo["pack_space"] = packSpace or 0end------------------------------------------------------------------------ 获取背包空间大小ModelPlayer.getPackSpace = function()	return mRoleInfo["pack_space"]end------------------------------------------------------------------------ 设置友情点ModelPlayer.setFriendPoint = function(friendPoint)	if 0 == mRoleInfo["friend_point"] then		mRoleInfo["pre_friend_point"] = friendPoint or 0	else		mRoleInfo["pre_friend_point"] = mRoleInfo["friend_point"]	end	mRoleInfo["friend_point"] = friendPoint or 0end------------------------------------------------------------------------ 获取友情点:当前,之前ModelPlayer.getFriendPoint = function()	return mRoleInfo["friend_point"], mRoleInfo["pre_friend_point"]end------------------------------------------------------------------------ 设置战绩ModelPlayer.setPoint = function(point)	if 0 == mRoleInfo["point"] then		mRoleInfo["pre_point"] = point or 0	else		mRoleInfo["pre_point"] = mRoleInfo["point"]	end	mRoleInfo["point"] = point or 0end------------------------------------------------------------------------ 获取战绩:当前,之前ModelPlayer.getPoint = function()	return mRoleInfo["point"], mRoleInfo["pre_point"]end------------------------------------------------------------------------ 设置荣誉值ModelPlayer.setHonour = function(honour)	if 0 == mRoleInfo["honour"] then		mRoleInfo["pre_honour"] = honour or 0	else		mRoleInfo["pre_honour"] = mRoleInfo["honour"]	end	mRoleInfo["honour"] = honour or 0end------------------------------------------------------------------------ 获取炼金经验值:当前,之前ModelPlayer.getHonour = function()	return mRoleInfo["honour"], mRoleInfo["pre_honour"]end------------------------------------------------------------------------ 设置符文碎片数量ModelPlayer.setSculptureFrag = function(sculptureFrag)	mRoleInfo["sculpture_frag"] = sculptureFrag or 0end------------------------------------------------------------------------ 获取符文碎片数量ModelPlayer.getSculptureFrag = function()	return mRoleInfo["sculpture_frag"]end------------------------------------------------------------------------ 设置战斗力ModelPlayer.setBattlePower = function(battlePower)	if 0 == mRoleInfo["battle_power"] then		mRoleInfo["pre_battle_power"] = battlePower or 0	else		mRoleInfo["pre_battle_power"] = mRoleInfo["battle_power"]	end	mRoleInfo["battle_power"] = battlePower or 0end------------------------------------------------------------------------ 获取战斗力:当前,之前ModelPlayer.getBattlePower = function()	return mRoleInfo["battle_power"], mRoleInfo["pre_battle_power"]end------------------------------------------------------------------------ 设置炼金经验值ModelPlayer.setAlchemy = function(alchemy)	if 0 == mRoleInfo["alchemy_exp"] then		mRoleInfo["pre_alchemy_exp"] = alchemy or 0	else		mRoleInfo["pre_alchemy_exp"] = alchemy	end	mRoleInfo["alchemy_exp"] = alchemyend------------------------------------------------------------------------ 获取炼金经验值:当前,之前ModelPlayer.getAlchemy = function()	return mRoleInfo["alchemy_exp"], mRoleInfo["pre_alchemy_exp"]end------------------------------------------------------------------------ 设置潜能等级ModelPlayer.setPotenceLevel = function(potence_level)	mRoleInfo["potence_level"] = potence_levelend ------------------------------------------------------------------------ 获取潜能等级ModelPlayer.getPotenceLevel = function()    if FightDateCache.getData("fd_copy_id") == FIRSTCOPYID then
        return 100
	end  	return mRoleInfo["potence_level"]end------------------------------------------------------------------------ 设置进阶等级ModelPlayer.setAdvancedLevel = function(advanced_level)	if 0 == mRoleInfo["advanced_level"] then		mRoleInfo["pre_advanced_level"] = advanced_level or 0	else		mRoleInfo["pre_advanced_level"] = mRoleInfo["advanced_level"]	end	mRoleInfo["advanced_level"] = advanced_level or 0end------------------------------------------------------------------------ 获取进阶等级ModelPlayer.getAdvancedLevel = function()    if FightDateCache.getData("fd_copy_id") == FIRSTCOPYID then
        return FIRSTADADVANCEDLEVEL,1
	end	return mRoleInfo["advanced_level"], mRoleInfo["pre_advanced_level"]end------------------------------------------------------------------------ 设置历史充值记录 ModelPlayer.setMoney = function(money)	mRoleInfo["money"] =  moneyend------------------------------------------------------------------------ 获取历史充值记录 ModelPlayer.getMoney = function()	return mRoleInfo["money"]/100end------------------------------------------------------------------------ 设置VIP等级 ModelPlayer.setVipLevel = function(vip_level)	mRoleInfo["vip_level"] =  vip_level    LayerVip.UpdateVipInfo(vip_level)end------------------------------------------------------------------------ 获取VIP等级ModelPlayer.getVipLevel = function()	return mRoleInfo["vip_level"]end------------------------------------------------------------------------ 设置战魂点数ModelPlayer.setBattleSoul = function(battle_soul)	mRoleInfo["battle_soul"] =  battle_soul	EventCenter_post(EventDef["ED_UPDATE_ROLEUP_INFO"])end------------------------------------------------------------------------ 获取战魂点数ModelPlayer.getBattleSoul = function()	return mRoleInfo["battle_soul"]end ----------------------------------------------------------------------ModelPlayer.getRoleUpAppence =function(roleType, advancedLevel)	local id = tostring(roleType*100 + advancedLevel)	return mRoleUpAppenceTable.map[id]end------------------------------------------------------------------------ 获取玩家天赋function ModelPlayer.getPlayerTalent()    local atTb = {}    local at = TalentLogic.getActiveTalentInfo()    for v,lv_info in pairs(at) do       local talent_lv = lv_info.level_up_id*100 + lv_info.level --自定义天赋等级计算       local talent =  Datetalent.new()       talent:init(talent_lv)       table.insert(atTb, talent)    end     --Log("---------玩家天赋--------------")    --Log(atTb)    return atTbend -- 获得玩家属性:叠加后的总属性,基础属性,装备属性 fightRole:战斗中需要的数值ModelPlayer.getPlayerAttr = function()	local roleRow = ModelPlayer.getRoleRow(ModelPlayer.getRoleType())	local attr = {}	local appenceTb = ModelPlayer.getRoleUpAppence(ModelPlayer.getRoleType(),ModelPlayer.getAdvancedLevel())	attr.fly_effect_id = appenceTb.fly_effect_id	attr.front_effect_id = appenceTb.front_effect_id	attr.back_effect_id = appenceTb.back_effect_id	attr.icon = appenceTb.icon		-- 基础属性 = 升级属性 + 潜能提升属性 + 进阶属性	local roleUpgradeRow = ModelPlayer.getRoleUpgradeRow(ModelPlayer.getRoleType(), ModelPlayer.getLevel())	attr = ModelEquip.addAttrType(attr, roleUpgradeRow)	-- 潜能属性(只有攻击和生命)	local potentAttr = getAttrByPotent(ModelPlayer.getPotenceLevel())	attr.atk = attr.atk + tonumber(potentAttr.attack)	attr.life = attr.life + tonumber(potentAttr.life)	local baseAttr = CommonFunc_table_copy_table(attr)	-- 叠加装备属性	local equipAttr = {}	for i=1, 6 do		local currEquip = ModelEquip.getCurrEquip(i)		local equip = ModelEquip.getEquipInfo(currEquip)		if equip then			equipAttr = ModelEquip.addAttrType(equipAttr, equip)		end	end	--装备属性	attr = ModelEquip.addAttrType(attr, equipAttr)	--祝福属性增加值	attr.tenacity_add = 0			attr.hit_ratio_add = 0	attr.critical_ratio_add = 0	attr.miss_ratio_add = 0	--祝福属性	attr = BlessLogic.getBlessValue(attr)    --天赋硬属性    attr = talentMgr.addRoleAttr(attr,ModelPlayer.getPlayerTalent())	return attr, baseAttr, equipAttrend------------------------------------------------------------------------ 获取职业头像ModelPlayer.getProfessionIconByType = function(typeId,advanced_level)	local appenceTb = ModelPlayer.getRoleUpAppence(typeId,advanced_level)	return appenceTb.herosmalliconend------------------------------------------------------------------------ 初始化玩家信息local function initPlayerInfos(infos)	ModelPlayer.setId(infos.id)												-- 角色id	ModelPlayer.setNickName(infos.nickname)									-- 昵称	ModelPlayer.setRoleStatus(infos.role_status)							-- 角色状态	ModelPlayer.setRoleType(infos.roletype)									-- 角色类型	ModelEquip.setCurrEquip(equipment_type["weapon"], infos.weapon)			-- 武器	ModelEquip.setCurrEquip(equipment_type["armor"], infos.armor)			-- 护甲	ModelEquip.setCurrEquip(equipment_type["necklace"], infos.necklace)		-- 项链	ModelEquip.setCurrEquip(equipment_type["ring"], infos.ring)				-- 戒指	ModelEquip.setCurrEquip(equipment_type["jewelry"], infos.jewelry)		-- 珠宝	ModelEquip.setCurrEquip(equipment_type["medal"], infos.medal)			-- 勋章	ModelPlayer.setSkill(1, infos.skill1)									-- 天赋技能1	ModelPlayer.setSkill(2, infos.skill2)									-- 天赋技能2	ModelSkill.setSkillGroupIndex(infos.skill_group_index)					-- 技能组索引值	ModelPlayer.setDivineLevel(infos.divine_level1)							-- 占卜等级	ModelPlayer.setLevel(infos.level)										-- 等级	ModelPlayer.setExp(infos.exp)											-- 经验	ModelPlayer.setGold(infos.gold)											-- 金币	ModelPlayer.setEmoney(infos.emoney)										-- 魔石	ModelPlayer.setSummonStone(infos.summon_stone)							-- 召唤石	ModelPlayer.setHpPower(infos.power_hp)									-- 体力	ModelPlayer.setRecoverTimeLeft(infos.recover_time_left)					-- 体力下一次恢复时间	ModelPlayer.setHpPowerBuyTimes(infos.power_hp_buy_times)				-- 体力购买次数	ModelPlayer.setPackSpace(infos.pack_space)								-- 背包空间大小	ModelPlayer.setFriendPoint(infos.friend_point)							-- 友情点	ModelPlayer.setPoint(infos.point)										-- 战绩	ModelPlayer.setHonour(infos.honour)										-- 荣誉值	ModelPlayer.setSculptureFrag(infos.sculpture_frag)						-- 符文碎片数量	ModelPlayer.setBattlePower(infos.battle_power)							-- 战斗力	ModelPlayer.setAlchemy(infos.alchemy_exp)								-- 炼金经验值	ModelPlayer.setPotenceLevel(infos.potence_level)						-- 潜能等级	ModelPlayer.setAdvancedLevel(infos.advanced_level)						-- 进阶等级	ModelPlayer.setBattleSoul(infos.battle_soul)							-- 战魂点数	ModelPlayer.setVipLevel(infos.vip_level)								-- vip等级	ModelPlayer.setMoney(infos.vip_exp)										-- 充值记录end------------------------------------------------------------------------ 改变玩家信息local function changePlayerInfos(infoType, infoValue)	-- infoType:对应notify_roleinfo_msg里面的字段	if "role_status" == infoType then		ModelPlayer.setRoleStatus(infoValue)								-- 角色状态	elseif "roletype" == infoType then		ModelPlayer.setRoleType(infoValue)									-- 角色类型	elseif "skill1" == infoType then		ModelPlayer.setSkill(1, infoValue)									-- 天赋技能1	elseif "skill2" == infoType then		ModelPlayer.setSkill(2, infoValue)									-- 天赋技能2	elseif "divine_level1" == infoType then		ModelPlayer.setDivineLevel(infoValue)								-- 占卜等级	elseif "level" == infoType then		ModelPlayer.setLevel(infoValue)										-- 等级		--EventCenter_post(EventDef["ED_LVUP_INVITE_CODE_NEW"])	elseif "exp" == infoType then		ModelPlayer.setExp(infoValue)										-- 经验	elseif "gold" == infoType then		ModelPlayer.setGold(infoValue)										-- 金币	elseif "emoney" == infoType then		ModelPlayer.setEmoney(infoValue)									-- 魔石	elseif "summon_stone" == infoType then		ModelPlayer.setSummonStone(infoValue)								-- 召唤石	elseif "power_hp" == infoType then		ModelPlayer.setHpPower(infoValue)									-- 体力	elseif "recover_time_left" == infoType then		ModelPlayer.setRecoverTimeLeft(infoValue)							-- 体力下一次恢复时间	elseif "power_hp_buy_times" == infoType then		ModelPlayer.setHpPowerBuyTimes(infoValue)							-- 体力购买次数	elseif "pack_space" == infoType then		ModelPlayer.setPackSpace(infoValue)									-- 背包空间大小	elseif "friend_point" == infoType then		ModelPlayer.setFriendPoint(infoValue)								-- 友情点	elseif "point" == infoType then		ModelPlayer.setPoint(infoValue)										-- 战绩	elseif "honour" == infoType then		ModelPlayer.setHonour(infoValue)									-- 荣誉值	elseif "sculpture_frag" == infoType then		ModelPlayer.setSculptureFrag(infoValue)								-- 符文碎片数量	elseif "battle_power" == infoType then		ModelPlayer.setBattlePower(infoValue)								-- 战斗力	elseif "alchemy_exp" == infoType then		ModelPlayer.setAlchemy(infoValue)									-- 炼金经验值	elseif "potence_level" == infoType then		ModelPlayer.setPotenceLevel(infoValue)								-- 潜能等级	elseif "advanced_level" == infoType then		ModelPlayer.setAdvancedLevel(infoValue)								-- 进阶等级	elseif "battle_soul" == infoType then			ModelPlayer.setBattleSoul(infoValue)								-- 战魂点数	elseif "vip_level" == infoType then			ModelPlayer.setVipLevel(infoValue)									-- vip等级		elseif "vip_exp" == infoType then 		ModelPlayer.setMoney(infoValue)										-- 充值记录	endend------------------------------------------------------------------------ 处理通知角色信息网络消息事件local function handelNotifyRoleInfo(packet)	initPlayerInfos(packet)	-- 保存本地信息	DB:save_single("playerid", ModelPlayer.getId())	-- 加载角色动画	local appenceTb = ModelPlayer.getRoleUpAppence(ModelPlayer.getRoleType(),ModelPlayer.getAdvancedLevel())	local roleAnimation = ResourceManger.getAnimationFrameById(appenceTb.icon)	ResourceManger.LoadSinglePicture(roleAnimation.name)	-- 渠道相关	ChannelProxy.sendPrivateMessage()	EventCenter_post(EventDef["ED_UPDATE_ROLE_INFO"], "all")	-- 请求解锁副本的消息	if nil == CopyDateCache.getInfo() then		local tb = req_last_copy()		tb.roleid = ModelPlayer.getId()		NetHelper.sendAndWait(tb, NetMsgType["msg_notify_last_copy"])						-- local tb = req_get_ladder_match_info()			--- 初始化竞技场分组赛		-- NetHelper.sendAndWait(tb,NetMsgType["msg_notify_ladder_match_info"])        local tb = req_push_tower_info()		--请求魔塔的信息        NetHelper.sendAndWait(tb, NetMsgType["msg_notify_push_tower_info"])				FriendDataCache.reqGetFriends_list()	--获得好友列表信息				if FriendDataCache.getOffReqAmounts() > 0  then			FriendDataCache.reqOffMakeFriendReqs()		--请求离线的好友请求信息		end		if  FriendDataCache.getOffChatAmounts() or 0 > 0 then			FriendDataCache.req_offline_chat_msg()		--请求离线的留言信息		end				local flag,code = LayerInviteCodeInput.getCheckFlag() 		--local flag,code = LayerRoleChoice.getCheckFlag()		if flag == 1 then			LayerInviteCodeNewNoFriend.requestCheck(code)		end						--TalentLogic.requestTalentInfo() 		--获得天赋信息	endend------------------------------------------------------------------------ 处理通知角色信息改变网络消息事件local function handelNotifyRoleInfoChange(packet)	cclog("notify_role_info_change", packet.type, packet.new_value)	changePlayerInfos(packet.type, packet.new_value)	EventCenter_post(EventDef["ED_UPDATE_ROLE_INFO"], packet.type) 	EventCenter_post(EventDef["ED_FRIEND_POINT_GET"])	EventCenter_post(EventDef["ED_SUMMON_STONE"])end------------------------------------------------------------------------ 处理通知金币改变网络消息事件local function handleNotifyGoldUpdate(packet)	ModelPlayer.setGold(packet.gold)	EventCenter_post(EventDef["ED_UPDATE_ROLE_INFO"], "gold")end------------------------------------------------------------------------ 处理通知魔石改变网络消息事件local function handleNotifyEmoneyUpdate(packet)	ModelPlayer.setEmoney(packet.emoney)	EventCenter_post(EventDef["ED_UPDATE_ROLE_INFO"], "emoney")end----------------------------------------------------------------------NetSocket_registerHandler(NetMsgType["msg_notify_roleinfo_msg"], notify_roleinfo_msg, handelNotifyRoleInfo)NetSocket_registerHandler(NetMsgType["msg_notify_role_info_change"], notify_role_info_change, handelNotifyRoleInfoChange)NetSocket_registerHandler(NetMsgType["msg_notify_gold_update"], notify_gold_update, handleNotifyGoldUpdate)NetSocket_registerHandler(NetMsgType["msg_notify_emoney_update"], notify_emoney_update, handleNotifyEmoneyUpdate)