------------------------------------------------------------------------ 作者：shenl-- 日期：2013-12-24-- 描述：开始游戏界面----------------------------------------------------------------------LayerBegin = {}LayerAbstract:extend(LayerBegin)local mRootView = nillocal mServerNameLabel = nillocal mServerData = nillocal mConnectFlag = false----------------------------------------------------------------------LayerBegin.onClick = function(weight)	local weightName = weight:getName()	if weightName == "Button_begin" then		-- 开始游戏		ChannelProxy.setUmsAgentEvent("STAT_LOGIN")		LayerBegin.linkAndCheckVer()	elseif weightName == "Button_more" then	-- 选择服务器 		UIManager.push("UI_ChooseServer")	endend------------------------------------------------------------------------ 初始化LayerBegin.init = function(bound)	cclog("客户端协议版本: "..get_proto_version())	if true == ChannelProxy.isOwnLogin() then  -- 自有登录		if bound then			ChannelProxy.setUid(bound.data.uid)			ChannelProxy.setToken(bound.data.token)		end	end	loginDataCache.initAccountDB(ChannelProxy.getUid())	local rootNode = UIManager.findLayerByTag("UI_Begin")	mRootView = rootNode	setOnClickListenner("Button_begin")		-- 账号登陆	setOnClickListenner("Button_more")		-- 选择服务器	-- 服务器名称	mServerNameLabel = tolua.cast(rootNode:getWidgetByName("Label_server_name"), "UILabel")	-- 版本号	local versionLabel = CommonFunc_createUILabel(ccp(0.5, 0.5), ccp(545, 30), nil, 24, nil, "version:"..GAME_VERSION, nil, nil)	rootNode:addWidget(versionLabel)	--	LayerBegin.setServerData(chooseServerDataCache.getServerData())end-- 注销LayerBegin.destroy = function()	mRootView = nilend------------------------------------------------------------------------ 设置服务器数据LayerBegin.setServerData = function(serverData)	mServerData = serverData	mServerNameLabel:setText(serverData.name)end------------------------------------------------------------------------ 连接网络并判断版本LayerBegin.linkAndCheckVer = function()	mConnectFlag = true	NetHelper.connect(mServerData.ip, mServerData.port, mServerData.crypto)end------------------------------------------------------------------------ 处理版本验证local function handleCheckVersion(success)	if false == mConnectFlag then		return	end	mConnectFlag = false	if true == success then		-- chooseServerDataCache.setServerData(mServerData)		NetHelper.loginCheck()	endend----------------------------------------------------------------------EventCenter_subscribe(EventDef["ED_CHECK_VERSION"], handleCheckVersion)